(window.webpackJsonp=window.webpackJsonp||[]).push([[503],{852:function(s,e,a){"use strict";a.r(e);var t=a(0),n=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"kubernetes概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes概述"}},[s._v("#")]),s._v(" Kubernetes概述")]),s._v(" "),e("h3",{attrs:{id:"kubernetes介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes介绍"}},[s._v("#")]),s._v(" Kubernetes介绍")]),s._v(" "),e("h4",{attrs:{id:"kubernetes是什么及作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes是什么及作用"}},[s._v("#")]),s._v(" Kubernetes是什么及作用")]),s._v(" "),e("p",[s._v("Kubernetes(K8S)是Google在2014年发布的一个开源项目，用于自动化容器化应用程序的部署、扩展和管理。 Kubernetes通常结合docker容器工作，并且整合多个运行着docker容器的主机集群。 官网地址 https://Kubernetes.io")]),s._v(" "),e("p",[s._v("中文社区 https://www.kubernetes.org.cn/docs")]),s._v(" "),e("p",[s._v("Kubernetes的目标是让部署容器化的应用简单并且高效，Kubernetes一个核心特点就是能够自主的管理容器来保 证云平台中的容器按照用户的期望运行。以下是Kubernetes相关特性：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("自动包装")]),s._v(" "),e("p",[s._v("根据资源需求和其他约束自动放置容器，同时不会牺牲可用性，混合关键和最大努力的工作负载，以提高资 源利用率并节省更多资源。")])]),s._v(" "),e("li",[e("p",[s._v("横向缩放")]),s._v(" "),e("p",[s._v("使用简单的命令或 UI，或者根据 CPU 的使用情况自动调整应用程序副本数。")])]),s._v(" "),e("li",[e("p",[s._v("自动部署和回滚")]),s._v(" "),e("p",[s._v("Kubernetes 逐渐部署对应用程序或其配置的更改，同时监视应用程序运行状况，以确保它不会同时终止所有 实例。 如果出现问题，Kubernetes会为您恢复更改，利用日益增长的部署解决方案的生态系统。")])]),s._v(" "),e("li",[e("p",[s._v("存储编排")])])]),s._v(" "),e("p",[s._v("自动安装您所选择的存储系统，无论是本地存储，如公有云提供商 GCP 或 AWS, 还是网络存储系统 NFS, iSCSI, Gluster, Ceph, Cinder, 或 Flocker。")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("自我修复")]),s._v(" "),e("p",[s._v("重新启动失败的容器，在节点不可用时，替换和重新编排节点上的容器，终止不对用户定义的健康检查做出 响应的容器，并且不会在客户端准备投放之前将其通告给客户端。")])]),s._v(" "),e("li",[e("p",[s._v("服务发现和负载均衡")]),s._v(" "),e("p",[s._v("不需要修改您的应用程序来使用不熟悉的服务发现机制，Kubernetes 为容器提供了自己的 IP 地址和一组容 器的单个 DNS 名称，并可以在它们之间进行负载均衡。")])]),s._v(" "),e("li",[e("p",[s._v("密钥和配置管理")]),s._v(" "),e("p",[s._v("部署和更新密钥和应用程序配置，不会重新编译您的镜像，不会在堆栈配置中暴露密钥(secrets)。")])]),s._v(" "),e("li",[e("p",[s._v("批处理")]),s._v(" "),e("p",[s._v("除了服务之外，Kubernetes还可以管理您的批处理和 CI 工作负载，如果需要，替换出现故障的容器。")])])]),s._v(" "),e("h4",{attrs:{id:"使用kubernetes能做什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用kubernetes能做什么"}},[s._v("#")]),s._v(" 使用Kubernetes能做什么")]),s._v(" "),e("p",[s._v("Kubernetes是一个全新的基于容器技术的分布式架构领先方案（源于Brog，是google十几年经验的结晶）； Kubernetes是一个开放的开发平台（无侵入性，现有系统很容器迁移到Kubernetes上）；Kubernetes是一个完备 的分布式系统支撑平台（完善的集群管理能力）。")]),s._v(" "),e("p",[s._v("使用Kubernetes可以在物理或虚拟机的Kubernetes集群上运行容器化应用，Kubernetes能够提供一个以容器为中 心的基础架构，满足在生产环境中运行应用的一些常见需求，如:")]),s._v(" "),e("ul",[e("li",[s._v("多个进程协同工作")]),s._v(" "),e("li",[s._v("存储系统挂载")]),s._v(" "),e("li",[s._v("Distributing secrets")]),s._v(" "),e("li",[s._v("应用健康检测")]),s._v(" "),e("li",[s._v("应用实例的复制")]),s._v(" "),e("li",[s._v("Pod自动伸缩/扩展")]),s._v(" "),e("li",[s._v("Naming and discovering")]),s._v(" "),e("li",[s._v("负载均衡")]),s._v(" "),e("li",[s._v("滚动更新")]),s._v(" "),e("li",[s._v("资源监控")]),s._v(" "),e("li",[s._v("日志访问")]),s._v(" "),e("li",[s._v("调度应用程序")]),s._v(" "),e("li",[s._v("提供认证和授权")])]),s._v(" "),e("h4",{attrs:{id:"为什么使用kubernetes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用kubernetes"}},[s._v("#")]),s._v(" 为什么使用Kubernetes")]),s._v(" "),e("p",[s._v("使用Kubernetes最直接的感受就是我们可以轻装上阵的开发复杂的系统了；其次Kubernetes是在全面拥抱微服务 架构（微服务的核心就是将一个巨大的单体应用拆分成很多小的互相连接的微服务，一个微服务后面可能是多个实 例副本在支撑，副本数量可以随着系统负荷的变化而动态调整）；最后Kubernetes系统架构具备超强的横向扩展 能力。")]),s._v(" "),e("h3",{attrs:{id:"kubernetes快速入门"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes快速入门"}},[s._v("#")]),s._v(" Kubernetes快速入门")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("环境准备")]),s._v(" "),e("p",[e("strong",[s._v("关闭CentOS防火墙")])]),s._v(" "),e("p",[e("code",[s._v("systemctl disable firewalld")])]),s._v(" "),e("p",[e("code",[s._v("systemctl stop firewalld")])]),s._v(" "),e("p",[e("strong",[s._v("安装etcd和kubernetes软件")])]),s._v(" "),e("p",[e("code",[s._v("yum install -y etcd kubernetes")])]),s._v(" "),e("p",[e("strong",[s._v("启动服务")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("systemctl start etcd\nsystemctl start "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\nsystemctl start kube-apiserver\nsystemctl start kube-controller-manager\nsystemctl start kube-scheduler\nsystemctl start kubelet\nsystemctl start kube-proxy\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("配置（tomcat）")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("mytomcat.rc.yaml")]),s._v(" "),e("div",{staticClass:"language-yml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ReplicationController\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mytomcat\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mytomcat\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("template")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mytomcat\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mytomcat\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" tomcat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("jre7\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("mytomcat.svc.yaml")]),s._v(" "),e("div",{staticClass:"language-yml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("appVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mytomcat\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" NodePort\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nodePort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("30001")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mytomcat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("创建")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("kubectl create "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" mytomcat.rc.yaml\nkubectl create "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" mytomcat.svc.yaml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("浏览测试")]),s._v(" "),e("p",[e("code",[s._v("http://服务器地址:30001")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424147.png",alt:"image-20210122220700871"}})])])])])]),s._v(" "),e("h3",{attrs:{id:"kubernetes-基本架构与常用术语"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-基本架构与常用术语"}},[s._v("#")]),s._v(" Kubernetes 基本架构与常用术语")]),s._v(" "),e("p",[s._v("Kubernetes集群包含有节点代理kubelet和Master组件(APIs, scheduler, etc)，一切都基于分布式的存储系统。下 面这张图是Kubernetes的架构图。")]),s._v(" "),e("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424148.png",alt:"704717-20170304103633345-155330022"}}),s._v(" "),e("p",[s._v("在这张系统架构图中，我们把服务分为运行在工作节点上的服务和组成集群级别控制板的服务。")]),s._v(" "),e("p",[s._v("Kubernetes节点有运行应用容器必备的服务，而这些都是受Master的控制。")]),s._v(" "),e("p",[s._v("每次个节点上当然都要运行Docker。Docker来负责所有具体的映像下载和容器运行。")]),s._v(" "),e("p",[s._v("Kubernetes主要由以下几个核心组件组成：")]),s._v(" "),e("ul",[e("li",[s._v("etcd保存了整个集群的状态；")]),s._v(" "),e("li",[s._v("apiserver提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制；")]),s._v(" "),e("li",[s._v("controller manager负责维护集群的状态，比如故障检测、自动扩展、滚动更新等；")]),s._v(" "),e("li",[s._v("scheduler负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上；")]),s._v(" "),e("li",[s._v("kubelet负责维护容器的生命周期，同时也负责Volume（CVI）和网络（CNI）的管理；")]),s._v(" "),e("li",[s._v("Container runtime负责镜像管理以及Pod和容器的真正运行（CRI）；")]),s._v(" "),e("li",[s._v("kube-proxy负责为Service提供cluster内部的服务发现和负载均衡；")])]),s._v(" "),e("p",[s._v("除了核心组件，还有一些推荐的Add-ons：")]),s._v(" "),e("ul",[e("li",[s._v("kube-dns负责为整个集群提供DNS服务")]),s._v(" "),e("li",[s._v("Ingress Controller为服务提供外网入口")]),s._v(" "),e("li",[s._v("Heapster提供资源监控")]),s._v(" "),e("li",[s._v("Dashboard提供GUI")]),s._v(" "),e("li",[s._v("Federation提供跨可用区的集群")]),s._v(" "),e("li",[s._v("Fluentd-elasticsearch提供集群日志采集、存储与查询")])]),s._v(" "),e("p",[s._v("Kubernetes设计理念和功能其实就是一个类似Linux的分层架构")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("核心层：Kubernetes最核心的功能，对外提供API构建高层的应用，对内提供插件式应用执行环境")])]),s._v(" "),e("li",[e("p",[s._v("应用层：部署（无状态应用、有状态应用、批处理任务、集群应用等）和路由（服务发现、DNS解析等）")])]),s._v(" "),e("li",[e("p",[s._v("管理层：系统度量（如基础设施、容器和网络的度量），自动化（如自动扩展、动态Provision等）以及策略管理（RBAC、Quota、PSP、NetworkPolicy等）")])]),s._v(" "),e("li",[e("p",[s._v("接口层：kubectl命令行工具、客户端SDK以及集群联邦")])]),s._v(" "),e("li",[e("p",[s._v("生态系统：在接口层之上的庞大容器集群管理调度的生态系统，可以划分为两个范畴")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Kubernetes外部：日志、监控、配置管理、CI、CD、Workflow、FaaS、OTS应用、ChatOps等")])]),s._v(" "),e("li",[e("p",[s._v("Kubernetes内部：CRI、CNI、CVI、镜像仓库、Cloud Provider、集群自身的配置和管理等")])])])])]),s._v(" "),e("h4",{attrs:{id:"cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cluster"}},[s._v("#")]),s._v(" Cluster")]),s._v(" "),e("p",[s._v("Cluster是计算、存储和网络资源的集合，Kubernetes利用这些资源运行各种基于容器的应用. Kubernetes Cluster由Master和Node组成，节点上运行着若干Kubernetes服务")]),s._v(" "),e("h4",{attrs:{id:"master"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#master"}},[s._v("#")]),s._v(" Master")]),s._v(" "),e("p",[s._v("Master主要职责是调度，即决定将应用放在哪运行。Master运行Linux系统，可以是物理机或虚拟机。 Master是 Kubernetes Cluster的大脑，运行着的Daemon服务包括kube-apiserver、kube-scheduler、kuber-controllermanager、etcd和Pod网络")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("API Server(kube-apiserver)")]),s._v(" "),e("p",[s._v("API Server 提供HTTP/HTTPS RESTful API,即Kubernetes API.是Kubernetes里所有资源的CRUD等操作的唯 一入口，也是集群控制的入口进程")])]),s._v(" "),e("li",[e("p",[s._v("Scheduler(kube-scheduler)")]),s._v(" "),e("p",[s._v("Scheduler负责资源调度的里程，简单说，它决定将Pod放在哪个Node上运行")])]),s._v(" "),e("li",[e("p",[s._v("Controller Manager(kube-controller-manager)")]),s._v(" "),e("p",[s._v("所有资源对象的自动化控制中心。Controller Manager负责管理Cluster各种资源，保证资源处于预期的状 态。Controller Manager有多种，如replication controller、endpoints controller、namespace controller、serviceaccounts controller等。 不同的controller管理不同的资源，如replication controller管理Deployment、StatefulSet、DaemonSet的 生命周期，namespace controller管理Namespace资源")])]),s._v(" "),e("li",[e("p",[s._v("etcd")]),s._v(" "),e("p",[s._v("etcd负责保存Kubernetes Cluster的配置信息和各种资源的状态信息。当数据发生变化时，etcd会快速地通知 Kubernetes相关组件")])]),s._v(" "),e("li",[e("p",[s._v("Pod网络")]),s._v(" "),e("p",[s._v("Pod要能够相互通信，Kubernetes Cluster必须部署Pod网络，flannel是其中一个可选方案。")])])]),s._v(" "),e("h4",{attrs:{id:"node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[s._v("#")]),s._v(" Node")]),s._v(" "),e("p",[s._v("除了Master，Kubernetes集群中的其它机器被称为Node节点。Node职责是运行容器应用，Node由Master管 理，Node负责监控并汇报容器的状态，同时根据Master的要求管理容器的生命周期。Node也运行在Linux系统， 可以是物理机或虚拟机。 每个Node节点上都运行着以下一组关键进程")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("kubelet")]),s._v(" "),e("p",[s._v("负责Pod对应的容器的创建、启动等任务，同时与Master节点密切协作，实现集群管理的基本功能")])]),s._v(" "),e("li",[e("p",[s._v("kube-proxy")]),s._v(" "),e("p",[s._v("实现Kubernetes Service的通信与负载均衡机制的重要组件")])]),s._v(" "),e("li",[e("p",[s._v("Docker Enginer")]),s._v(" "),e("p",[s._v("Docker引擎，负责本机的容器创建和管理工作")])])]),s._v(" "),e("h4",{attrs:{id:"pod"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod"}},[s._v("#")]),s._v(" Pod")]),s._v(" "),e("p",[s._v("Pod是Kubernetes的最小单元，也是最重要和最基本的概念。每一个Pod包含一个或多个容器，Pod的容器会作为 一个整体被Master调度到一个Node上运行。Kubenetes为每个Pod都分配了唯一的IP地址，称为PodIP,一个Pod里的多个容器共享PodIP地址。在Kubernetes里，一个Pod里的容器与另外主机上的Pod容器能够直接通信。")]),s._v(" "),e("h4",{attrs:{id:"service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service"}},[s._v("#")]),s._v(" Service")]),s._v(" "),e("p",[s._v('Kubernetes Service定义了外界访问一组特定Pod的方式，Service有自己的IP和端口，Service为Pod提供了负载均 衡。它也是Kubernetes最核心的资源对象之一，每个Service其实就是我们经常提起的微服务架构中的一个"微服务"。')]),s._v(" "),e("h4",{attrs:{id:"replication-controller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replication-controller"}},[s._v("#")]),s._v(" Replication Controller")]),s._v(" "),e("p",[s._v("Replication Controller(简称RC)是Kubernetes系统中的核心概念之一，它其实是定义了一个期望的场景，即声明 某种Pod的副本数量在任意时刻都符合某个预期值，所以RC的定义包括如下几个部分")]),s._v(" "),e("ul",[e("li",[s._v("Pod期待的副本数(replicas)")]),s._v(" "),e("li",[s._v("用于筛选目标Pod的Label Selector")]),s._v(" "),e("li",[s._v("当Pod的副本数量小于预期数量时，用于创建新Pod的Pod模板(template)")])]),s._v(" "),e("p",[s._v("以下是总结的RC的一些特性与作用")]),s._v(" "),e("p",[s._v("在大多数情况下，我们通过定义一个RC实现Pod的创建过程及副本数量的自动控制")]),s._v(" "),e("ul",[e("li",[s._v("RC里包括完整的Pod定义模板")]),s._v(" "),e("li",[s._v("RC通过Label Selector机制实现对Pod副本的自动控制")]),s._v(" "),e("li",[s._v("通过改变RC里的Pod副本数量，可以实现Pod的扩容或缩容功能")]),s._v(" "),e("li",[s._v("通过改变RC里Pod模板中镜像版本，可以实现Pod的滚动升级功能")])]),s._v(" "),e("h2",{attrs:{id:"kubernetes集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes集群"}},[s._v("#")]),s._v(" Kubernetes集群")]),s._v(" "),e("p",[s._v("Kubernetes用于协调高度可用的计算机集群，这些计算机群集被连接作为单个单元工作。Kubernetes在一个集群上以更有效的方式自动分发和调度容器应用程序。Kubernetes集群由两种类型的资源组成：")]),s._v(" "),e("ul",[e("li",[s._v("Master是集群的调度节点")]),s._v(" "),e("li",[s._v("Nodes是应用程序实际运行的工作节点")])]),s._v(" "),e("p",[s._v("接下来为大家讲解一下如何快速部署一套Kubernetes集群，K8S集群部署有几种方式：kubeadm、minikube和二进制包。前两者属于自动部署，简化部署操作，我们这里强烈推荐初学者使用二进制包部署，因为自动部署屏蔽了很多细节，使得对各个模块感知很少，非常不利用学习。")]),s._v(" "),e("h3",{attrs:{id:"环境准备与规划"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境准备与规划"}},[s._v("#")]),s._v(" 环境准备与规划")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("推荐配置2核2G")]),s._v(" "),e("p",[s._v("Docker version 17.05.0-ce")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("角色")]),s._v(" "),e("th",[s._v("IP")]),s._v(" "),e("th",[s._v("主键")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("master")]),s._v(" "),e("td",[s._v("192.168.126.140")]),s._v(" "),e("td",[s._v("etcd、kube-apiserver、kube-controller-manager、 kubescheduler、docker")])]),s._v(" "),e("tr",[e("td",[s._v("node01")]),s._v(" "),e("td",[s._v("192.168.126.141")]),s._v(" "),e("td",[s._v("kube-proxy、kubelet、docker")])]),s._v(" "),e("tr",[e("td",[s._v("node02")]),s._v(" "),e("td",[s._v("192.168.126.142")]),s._v(" "),e("td",[s._v("kube-proxy、kubelet、docker")])])])])]),s._v(" "),e("li",[e("p",[s._v("查看默认防火墙状态(关闭后显示not running ,开启后显示 running)")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("firewall-cmd --state\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("关闭防火墙")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("systemctl stop firewalld.service\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("禁止firewall开机启动")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("systemctl disable firewalld.service\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("获取Kubernetes二进制包")]),s._v(" "),e("p",[s._v("https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.9.md")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424149.png",alt:"360截图1766102110097133"}})]),s._v(" "),e("p",[s._v("页面表格中找到Server Binaries中的kubernetes-server-linux-amd64.tar.gz文件，下载到本地。")]),s._v(" "),e("p",[s._v("该压缩包中包括了k8s需要运行的全部服务程序文件")])])]),s._v(" "),e("h3",{attrs:{id:"master安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#master安装"}},[s._v("#")]),s._v(" Master安装")]),s._v(" "),e("h4",{attrs:{id:"docker安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[s._v("#")]),s._v(" Docker安装")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("设置yum源")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("vi /etc/yum.repos.d/docker.repo\n[dockerrepo]\nname=Docker Repository\nbaseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/\nenabled=1\ngpgcheck=1\ngpgkey=https://yum.dockerproject.org/gpg\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("安装docke")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("yum install docker-engine\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("安装后查看docker版本")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("docker -v\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])]),s._v(" "),e("h4",{attrs:{id:"etcd服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#etcd服务"}},[s._v("#")]),s._v(" etcd服务")]),s._v(" "),e("p",[s._v("etcd做为Kubernetes集群的主要服务，在安装Kubernetes各服务前需要首先安装和启动。")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("下载etcd二进制文件")]),s._v(" "),e("p",[s._v("https://github.com/etcd-io/etcd/releases")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424150.png",alt:"360截图16780701879079"}})])]),s._v(" "),e("li",[e("p",[s._v("上传到master并解压")]),s._v(" "),e("p",[s._v("将etcd和etcdctl文件复制到/usr/bin目录")]),s._v(" "),e("p",[s._v("配置systemd服务文件 /usr/lib/systemd/system/etcd.service")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[Unit]\nDescription=Etcd Server\nAfter=network.target\n[Service]\nType=simple\nEnvironmentFile=-/etc/etcd/etcd.conf\nWorkingDirectory=/var/lib/etcd/\nExecStart=/usr/bin/etcd\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("启动与测试etcd服务")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("systemctl daemon-reload\nsystemctl enable etcd.service\nmkdir -p /var/lib/etcd/\nsystemctl start etcd.service\netcdctl cluster-health\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])])]),s._v(" "),e("h4",{attrs:{id:"kube-apiserver服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kube-apiserver服务"}},[s._v("#")]),s._v(" kube-apiserver服务")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cp kube-apiserver kube-controller-manager kube-scheduler kubectl /usr/bin/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("下面是对kube-apiserver服务进行配置")]),s._v(" "),e("p",[s._v("编辑systemd服务文件 vi /usr/lib/systemd/system/kube-apiserver.service")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[Unit]\nDescription=Kubernetes API Server\nDocumentation=https://github.com/kubernetes/kubernetes\nAfter=etcd.service\nWants=etcd.service\n[Service]\nEnvironmentFile=/etc/kubernetes/apiserver\nExecStart=/usr/bin/kube-apiserver $KUBE_API_ARGS\nRestart=on-failure\nType=notify\n[Install]\nWantedBy=multi-user.target\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("创建目录： mkdir /etc/kubernetes")]),s._v(" "),e("p",[s._v("配置文件 ：vi /etc/kubernetes/apiserver")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('KUBE_API_ARGS="--storage-backend=etcd3 --etcd-servers=http://127.0.0.1:2379 --insecure-bind-address=0.0.0.0 --insecure-port=8080 --service-cluster-ip-range=169.169.0.0/16 --admission_control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota --logtostderr=true --log-dir=/var/log/kubernetes --v=2"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"kube-controller-manager服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kube-controller-manager服务"}},[s._v("#")]),s._v(" kube-controller-manager服务")]),s._v(" "),e("p",[s._v("kube-controller-manager服务依赖于kube-apiserver服务：")]),s._v(" "),e("p",[s._v("配置systemd服务文件：vi /usr/lib/systemd/system/kube-controller-manager.service")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[Unit]\nDescription=Kubernetes Controller Manager\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=kube-apiserver.service\nRequires=kube-apiserver.service\n[Service]\nEnvironmentFile=-/etc/kubernetes/controller-manager\nExecStart=/usr/bin/kube-controller-manager $KUBE_CONTROLLER_MANAGER_ARGS\nRestart=on-failure\nLimitNOFILE=65536\n[Install]\nWantedBy=multi-user.target\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("配置文件： vi /etc/kubernetes/controller-manager")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('KUBE_CONTROLLER_MANAGER_ARGS="--master=http://192.168.126.140:8080 --logtostderr=true --log-dir=/var/log/kubernetes --v=2"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"kube-scheduler服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kube-scheduler服务"}},[s._v("#")]),s._v(" kube-scheduler服务")]),s._v(" "),e("p",[s._v("kube-scheduler服务也依赖于kube-apiserver服务。")]),s._v(" "),e("p",[s._v("配置systemd服务文件：vi /usr/lib/systemd/system/kube-scheduler.service")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[Unit]\nDescription=Kubernetes Scheduler\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=kube-apiserver.service\nRequires=kube-apiserver.service\n[Service]\nEnvironmentFile=-/etc/kubernetes/scheduler\nExecStart=/usr/bin/kube-scheduler $KUBE_SCHEDULER_ARGS\nRestart=on-failure\nLimitNOFILE=65536\n[Install]\nWantedBy=multi-user.target\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("配置文件：vi /etc/kubernetes/scheduler")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('KUBE_SCHEDULER_ARGS="--master=http://192.168.126.140:8080 --logtostderr=true --log-dir=/var/log/kubernetes --v=2"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),e("p",[s._v("完成以上配置后，按顺序启动服务")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("systemctl daemon-reload\nsystemctl enable kube-apiserver.service\nsystemctl start kube-apiserver.service\nsystemctl enable kube-controller-manager.service\nsystemctl start kube-controller-manager.service\nsystemctl enable kube-scheduler.service\nsystemctl start kube-scheduler.service\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("检查每个服务的健康状态：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("systemctl status kube-apiserver.service\nsystemctl status kube-controller-manager.service\nsystemctl status kube-scheduler.service\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"node1安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node1安装"}},[s._v("#")]),s._v(" Node1安装")]),s._v(" "),e("p",[s._v("在Node1节点上，以同样的方式把从压缩包中解压出的二进制文件kubelet kube-proxy放到/usr/bin目录中。")]),s._v(" "),e("p",[s._v("在Node1节点上需要预先安装docker,请参考Master上Docker的安装，并启动Docker")]),s._v(" "),e("h4",{attrs:{id:"kubelet服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubelet服务"}},[s._v("#")]),s._v(" kubelet服务")]),s._v(" "),e("p",[s._v("配置systemd服务文件：vi /usr/lib/systemd/system/kubelet.service")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[Unit]\nDescription=Kubernetes Kubelet Server\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n[Service]\nWorkingDirectory=/var/lib/kubelet\nEnvironmentFile=-/etc/kubernetes/kubelet\nExecStart=/usr/bin/kubelet $KUBELET_ARGS\nRestart=on-failure\nKillMode=process\n[Install]\nWantedBy=multi-user.target\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[s._v("创建目录：mkdir -p /var/lib/kubelet")]),s._v(" "),e("p",[s._v("配置文件：vi /etc/kubernetes/kubelet")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('KUBELET_ARGS="--kubeconfig=/etc/kubernetes/kubeconfig --hostname-override=192.168.126.141 --logtostderr=false --log-dir=/var/log/kubernetes --v=2 --fail-swap-on=false"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("用于kubelet连接Master Apiserver的配置文件：vi /etc/kubernetes/kubeconfig")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: Config\nclusters:\n - cluster:\n     server: http://192.168.126.140:8080\n   name: local\ncontexts:\n  - context:\n      cluster: local\n    name: mycontext\ncurrent-context: mycontext\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("h4",{attrs:{id:"kube-proxy服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kube-proxy服务"}},[s._v("#")]),s._v(" kube-proxy服务")]),s._v(" "),e("p",[s._v("kube-proxy服务依赖于network服务,所以一定要保证network服务正常，如果network服务启动失败，常见解决方案有以下几中：")]),s._v(" "),e("ol",[e("li",[s._v("和 NetworkManager 服务有冲突，这个好解决，直接关闭 NetworkManger 服务就好了， service NetworkManager stop，并且禁止开机启动 chkconfig NetworkManager off 。之后重启就好了")]),s._v(" "),e("li",[s._v("和配置文件的MAC地址不匹配，这个也好解决，使用ip addr（或ifconfig）查看mac地址， 将/etc/sysconfig/network-scripts/ifcfg-xxx中的HWADDR改为查看到的mac地址")]),s._v(" "),e("li",[s._v("设定开机启动一个名为NetworkManager-wait-online服务，命令为： systemctl enable NetworkManager-wait-online.service")]),s._v(" "),e("li",[s._v("查看/etc/sysconfig/network-scripts下，将其余无关的网卡位置文件全删掉，避免不必要的影响，即只留一个以 ifcfg开头的文件")])]),s._v(" "),e("p",[s._v("配置systemd服务文件：vi /usr/lib/systemd/system/kube-proxy.service")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[Unit]\nDescription=Kubernetes Kube-proxy Server\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=network.service\nRequires=network.service\n[Service]\nEnvironmentFile=/etc/kubernetes/proxy\nExecStart=/usr/bin/kube-proxy $KUBE_PROXY_ARGS\nRestart=on-failure\nLimitNOFILE=65536\nKillMode=process\n[Install]\nWantedBy=multi-user.target\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[s._v("配置文件：vi /etc/kubernetes/proxy")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('KUBE_PROXY_ARGS="--master=http://192.168.100.10:8080 --hostname-override=192.168.126.141 --logtostderr=true --log-dir=/var/log/kubernetes --v=2"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"启动-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-2"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("systemctl daemon-reload\nsystemctl enable kubelet\nsystemctl start kubelet\nsystemctl status kubelet\nsystemctl enable kube-proxy\nsystemctl start kube-proxy\nsystemctl status kube-proxy\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h3",{attrs:{id:"node2安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node2安装"}},[s._v("#")]),s._v(" Node2安装")]),s._v(" "),e("p",[s._v("请参考Node1安装，注意修改IP")]),s._v(" "),e("h3",{attrs:{id:"健康检查与示例测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#健康检查与示例测试"}},[s._v("#")]),s._v(" 健康检查与示例测试")]),s._v(" "),e("ul",[e("li",[s._v("查看集群状态")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424151.png",alt:"360截图17001020106131136"}})]),s._v(" "),e("ul",[e("li",[e("p",[s._v("查看master集群组件状态")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424152.png",alt:"360截图1790010395136122"}})])]),s._v(" "),e("li",[e("p",[s._v("nginx-rc.yaml")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: ReplicationController\nmetadata:\n name: nginx\nspec:\n replicas: 3\n selector:\n  app: nginx\n template:\n  metadata:\n   labels:\n    app: nginx\n  spec:\n   containers:\n   - name: nginx\n     image: nginx\n     ports:\n     - containerPort: 80     \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[s._v("kubectl create -f nginx-rc.yaml")])]),s._v(" "),e("li",[e("p",[s._v("nginx-svc.yaml")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n name: nginx\nspec:\n type: NodePort\n ports:\n  - port: 80\n    nodePort: 30000\n selector:\n   app: nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("kubectl create -f nginx-svc.yaml")])]),s._v(" "),e("li",[e("p",[s._v("查看pod")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424153.png",alt:"360截图17290512172129"}})])]),s._v(" "),e("li",[e("p",[s._v("查看具体pod详情")])]),s._v(" "),e("li",[e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424154.png",alt:"360截图182005058010888"}})])])]),s._v(" "),e("h2",{attrs:{id:"kubernetes核心技术"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes核心技术"}},[s._v("#")]),s._v(" Kubernetes核心技术")]),s._v(" "),e("h3",{attrs:{id:"pod详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod详解"}},[s._v("#")]),s._v(" Pod详解")]),s._v(" "),e("p",[s._v("Pod是Kubernetes的最重要概念，每一个Pod都有一个特殊的被称为”根容器“的Pause容器。Pause容器对应的镜 像属于Kubernetes平台的一部分，除了Pause容器，每个Pod还包含一个或多个紧密相关的用户业务容器。")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424155.png",alt:"image-20210122221014535"}})]),s._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424156.png",alt:"image-20210122221048772"}})]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Pod vs 应用")]),s._v(" "),e("p",[s._v("每个Pod都是应用的一个实例，有专用的IP")])]),s._v(" "),e("li",[e("p",[s._v("Pod vs 容器")]),s._v(" "),e("p",[s._v("一个Pod可以有多个容器，彼此间共享网络和存储资源，每个Pod 中有一个Pause容器保存所有的容器状态，\n通过管理pause容器，达到管理pod中所有容器的效果")])]),s._v(" "),e("li",[e("p",[s._v("Pod vs 节点")]),s._v(" "),e("p",[s._v("同一个Pod中的容器总会被调度到相同Node节点，不同节点间Pod的通信基于虚拟二层网络技术实现")])]),s._v(" "),e("li",[e("p",[s._v("Pod vs Pod")]),s._v(" "),e("p",[s._v("普通的Pod和静态Pod")])])]),s._v(" "),e("h4",{attrs:{id:"pod的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod的定义"}},[s._v("#")]),s._v(" Pod的定义")]),s._v(" "),e("p",[s._v("下面是yaml文件定义的Pod的完整内容")]),s._v(" "),e("div",{staticClass:"language-yml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1            //版本 \n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod                 //类型，pod \n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                 //元数据 \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string            //元数据，pod的名字 \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string       //元数据，pod的命名空间   \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                 //元数据，标签列表 \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string        //元数据，标签的名字 \n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("annotations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("            //元数据"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("自定义注解列表     \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string        //元数据"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("自定义注解名字 \n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                     //pod中容器的详细定义\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("             //pod中的容器列表，可以有多个容器 \n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string          //容器的名称 \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string         //容器中的镜像 \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("imagesPullPolicy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Always"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v("Never"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v("IfNotPresent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("//获取镜像的策略，默认值为Always，每次都尝试重新下 载镜像\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("     //容器的启动命令列表（不配置的话使用镜像内部的命令） \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("args")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("        //启动参数列表 \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("workingDir")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string    //容器的工作目录 \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumeMounts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("         //挂载到到容器内部的存储卷设置 \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mountPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string   //存储卷在容器内部Mount的绝对路径 \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("readOnly")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" boolean   //默认值为读写\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                //容器需要暴露的端口号列表 \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" int  //容器要暴露的 \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" int     //容器所在主机监听的端口（容器暴露端口映射到宿主机的端口，设置hostPort时同一 台宿主机将不能再启动该容器的第2份副本） \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string    //TCP和UDP，默认值为TCP \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("env")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                  //容器运行前要设置的环境列表 \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("resources")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("             \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("limits")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("             //资源限制，容器的最大可用资源数量 \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Srting \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("requeste")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("           //资源限制，容器启动的初始可用资源数量 \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cpu")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("memory")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("livenessProbe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("         //pod内容器健康检查的设置 \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("exec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  //exec方式需要指定的命令或脚本 \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("httpGet")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("             //通过httpget检查健康 \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" number \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("scheme")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Srtring \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("httpHeaders")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Stirng \n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("tcpSocket")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("           //通过tcpSocket检查健康 \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" number \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("initialDelaySeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0//首次检查时间 \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("timeoutSeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0     //检查超时时间 \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("periodSeconds")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 0      //检查间隔时间 \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("successThreshold")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("failureThreshold")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("securityContext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("      //安全配置 \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("privileged")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" falae\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restartPolicy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Always"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v("Never"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v("OnFailure"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("//重启策略，默认值为Always \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nodeSelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" object    //节点选择，表示将该Pod调度到包含这些label的Node上，以key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("value格式指定           \t\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("imagePullSecrets")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostNetwork")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" false      //是否使用主机网络模式，弃用Docker网桥，默认否\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                  //在该pod上定义共享存储卷列表 \n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("emptyDir")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("            //是一种与Pod同生命周期的存储卷，是一个临时目录，内容为空     \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostPath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("               //Pod所在主机上的目录，将被用于容器中mount的目录 \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("secret")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                 //类型为secret的存储卷 \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("secretName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("item")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("configMap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("             //类型为configMap的存储卷 \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("items")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" string \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br")])]),e("h4",{attrs:{id:"_3-1-2-pod的基本用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-pod的基本用法"}},[s._v("#")]),s._v(" 3.1.2 Pod的基本用法")]),s._v(" "),e("p",[s._v("在kubernetes中对运行容器的要求为：容器的主程序需要一直在前台运行，而不是后台运行。应用需要改造成前台运行的方式。如果我们创建的Docker镜像的启动命令是后台执行程序，则在kubelet创建包含这个容器的pod之后运行完该命令，即认为Pod已经结束，将立刻销毁该Pod。如果为该Pod定义了RC，则创建、销毁会陷入一个无限循环的过程中。")]),s._v(" "),e("p",[s._v("Pod可以由1个或多个容器组合而成。")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("由一个容器组成的Pod示例")]),s._v(" "),e("div",{staticClass:"language-yml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个容器组成的Pod")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mytomcat\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mytomcat\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mytomcat\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" tomcat\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("由两个为紧耦合的容器组成的Pod示例")]),s._v(" "),e("div",{staticClass:"language-yml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#两个紧密耦合的容器")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" myweb\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" tomcat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("redis\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" tomcat\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" tomcat\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("创建")]),s._v(" "),e("p",[e("code",[s._v("kubectl create -f xxx.yaml")])])]),s._v(" "),e("li",[e("p",[s._v("查看")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("kubectl get pod/po "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Pod_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nkubectl get pod/po "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Pod_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-o")]),s._v(" wide\nkubectl describe pod/po "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Pod_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("删除")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("kubectl delete "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" pod pod_name.yaml\nkubectl delete pod --all/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])])])]),s._v(" "),e("h4",{attrs:{id:"_3-1-3-pod的分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-pod的分类"}},[s._v("#")]),s._v(" 3.1.3 Pod的分类")]),s._v(" "),e("p",[s._v("Pod有两种类型")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("普通Pod")]),s._v(" "),e("p",[s._v("普通Pod一旦被创建，就会被放入到etcd中存储，随后会被Kubernetes Master调度到某个具体的Node上并 进行绑定，随后该Pod对应的Node上的kubelet进程实例化成一组相关的Docker容器并启动起来。在默认情 况下，当Pod里某个容器停止时，Kubernetes会自动检测到这个问题并且重新启动这个Pod里某所有容器， 如果Pod所在的Node宕机，则会将这个Node上的所有Pod重新调度到其它节点上。")])]),s._v(" "),e("li",[e("p",[s._v("静态Pod")]),s._v(" "),e("p",[s._v("静态Pod是由kubelet进行管理的仅存在于特定Node上的Pod,它们不能通过 API Server进行管理，无法与 ReplicationController、Deployment或DaemonSet进行关联，并且kubelet也无法对它们进行健康检查。")])])]),s._v(" "),e("h4",{attrs:{id:"pod生命周期和重启策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod生命周期和重启策略"}},[s._v("#")]),s._v(" Pod生命周期和重启策略")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Pod的状态")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[s._v("状态值")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("Pending")]),s._v(" "),e("td",[s._v("API Server已经创建了该Pod,但Pod中的一个或多个容器的镜像还没有创建，包括镜像下载过程")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("Running")]),s._v(" "),e("td",[s._v("Pod内所有容器已创建，且至少一个容器处于运行状态、正在启动状态或正在重启状态")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("Completed")]),s._v(" "),e("td",[s._v("Pod内所有容器均成功执行退出，且不会再重启")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("Failed")]),s._v(" "),e("td",[s._v("Pod内所有容器均已退出，但至少一个容器退出失败")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("Unknown")]),s._v(" "),e("td",[s._v("由于某种原因无法获取Pod状态，例如网络通信不畅")])])])])]),s._v(" "),e("li",[e("p",[s._v("Pod重启策略")]),s._v(" "),e("p",[s._v("Pod的重启策略包括Always、OnFailure和Never，默认值是Always")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("重启策略")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("Always")]),s._v(" "),e("td",[s._v("当容器失效时，由kubelet自动重启该容器")])]),s._v(" "),e("tr",[e("td",[s._v("OnFailure")]),s._v(" "),e("td",[s._v("当容器终止运行且退出码不为0时，由kubelet自动重启该容器")])]),s._v(" "),e("tr",[e("td",[s._v("Never")]),s._v(" "),e("td",[s._v("不论容器运行状态如何，kubelet都不会重启该容器")])])])])])]),s._v(" "),e("p",[s._v("常见状态转换")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("Pod包含的容器数")]),s._v(" "),e("th",[s._v("Pod当前的状态")]),s._v(" "),e("th",[s._v("发生事件")]),s._v(" "),e("th",[s._v("Pod的结果状态")]),s._v(" "),e("th"),s._v(" "),e("th")])]),s._v(" "),e("tbody",[e("tr",[e("td"),s._v(" "),e("td"),s._v(" "),e("td"),s._v(" "),e("td",[s._v("RestartPolicy=Always")]),s._v(" "),e("td",[s._v("RestartPolicy=OnFailure")]),s._v(" "),e("td",[s._v("RestartPolicy=Never")])]),s._v(" "),e("tr",[e("td",[s._v("包含一个容器")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("容器成功退出")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("Succeeded")]),s._v(" "),e("td",[s._v("Succeeded")])]),s._v(" "),e("tr",[e("td",[s._v("包含一个容器")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("容器失败退出")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("Failure")])]),s._v(" "),e("tr",[e("td",[s._v("包含两个容器")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("1个容器失败退出")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("Running")])]),s._v(" "),e("tr",[e("td",[s._v("包含两个容器")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("容器被OOM杀掉")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("Running")]),s._v(" "),e("td",[s._v("Failure")])])])]),s._v(" "),e("h4",{attrs:{id:"pod资源配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod资源配置"}},[s._v("#")]),s._v(" Pod资源配置")]),s._v(" "),e("p",[s._v("每个Pod都可以对其能使用的服务器上的计算资源设置限额，Kubernetes中可以设置限额的计算资源有CPU与Memory两种，其中CPU的资源单位为CPU数量,是一个绝对值而非相对值。Memory配额也是一个绝对值，它的单位是内存字节数。")]),s._v(" "),e("p",[s._v("Kubernetes里，一个计算资源进行配额限定需要设定以下两个参数：")]),s._v(" "),e("ol",[e("li",[s._v("Requests 该资源最小申请数量，系统必须满足要求")]),s._v(" "),e("li",[s._v("Limits 该资源最大允许使用的量，不能突破，当容器试图使用超过这个量的资源时，可能会被Kubernetes Kill并重启")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('sepc\n  containers:\n  - name: db\n\timage: mysql\n    resources:\n      requests:\n        memory: "64Mi"\n        cpu: "250m"\n      limits:\n        memory: "128Mi"\n        cpu: "500m"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("上述代码表明MySQL容器申请最少0.25个CPU以及64MiB内存，在运行过程中容器所能使用的资源配额为0.5个 CPU以及128MiB内存。")]),s._v(" "),e("h3",{attrs:{id:"label详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#label详解"}},[s._v("#")]),s._v(" Label详解")]),s._v(" "),e("p",[s._v("Label是Kubernetes系统中另一个核心概念。一个Label是一个key=value的键值对，其中key与value由用户自己指定。Label可以附加到各种资源对象上，如Node、Pod、Service、RC，一个资源对象可以定义任意数量的Label， 同一个Label也可以被添加到任意数量的资源对象上，Label通常在资源对象定义时确定，也可以在对象创建后动态添加或删除。")]),s._v(" "),e("p",[s._v("Label的最常见的用法是使用metadata.labels字段，来为对象添加Label，通过spec.selector来引用对象")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: nginx\nspec:\n  replicas: 3\n  selector:\n    app: nginx\n  template:\n\tmetadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        ports:\n        - containerPort: 80\n-------------------------------------\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx\nspec:\n  type: NodePort\n  ports:\n    - port: 80\n      nodePort: 3333\n  selector:\n    app: nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("p",[s._v("Label附加到Kubernetes集群中的各种资源对象上，目的就是对这些资源对象进行分组管理，而分组管理的核心就是Label Selector。Label与Label Selector都是不能单独定义，必须附加在一些资源对象的定义文件上，一般附加在RC和Service的资源定义文件中。")]),s._v(" "),e("h3",{attrs:{id:"replication-controller详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replication-controller详解"}},[s._v("#")]),s._v(" Replication Controller详解")]),s._v(" "),e("p",[s._v("Replication Controller(RC)是Kubernetes系统中核心概念之一，当我们定义了一个RC并提交到Kubernetes集群中以后，Master节点上的Controller Manager组件就得到通知，定期检查系统中存活的Pod,并确保目标Pod实例的数量刚好等于RC的预期值，如果有过多或过少的Pod运行，系统就会停掉或创建一些Pod.此外我们也可以通过修改RC的副本数量，来实现Pod的动态缩放功能。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("kubectl scale rc nginx --replicas=5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("由于Replication Controller与Kubernetes代码中的模块Replication Controller同名，所以在Kubernetes v1.2时， 它就升级成了另外一个新的概念Replica Sets,官方解释为下一代的RC，它与RC区别是：Replica Sets支援基于集合的 Label selector,而RC只支持基于等式的Label Selector。我们很少单独使用Replica Set,它主要被Deployment这个更高层面的资源对象所使用，从而形成一整套Pod创建、删除、更新的编排机制。最好不要越过RC直接创建Pod， 因为Replication Controller会通过RC管理Pod副本，实现自动创建、补足、替换、删除Pod副本，这样就能提高应用的容灾能力，减少由于节点崩溃等意外状况造成的损失。即使应用程序只有一个Pod副本，也强烈建议使用RC来定义Pod。")]),s._v(" "),e("h3",{attrs:{id:"replica-set详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#replica-set详解"}},[s._v("#")]),s._v(" Replica Set详解")]),s._v(" "),e("p",[s._v("Replica Set 跟 Replication Controller 没有本质的不同，只是名字不一样，并且 ReplicaSet 支持集合式的selector（Replication Controller 仅支持等式）。Kubernetes官方强烈建议避免直接使用Replica Set，而应该通过 Deployment来创建RS和Pod。由于Replica Set是Replication Controller的代替物，因此用法基本相同，唯一的区别在于ReplicaSet支持集合式的selector。")]),s._v(" "),e("h3",{attrs:{id:"deployment详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deployment详解"}},[s._v("#")]),s._v(" Deployment详解")]),s._v(" "),e("p",[s._v("Deployment是Kubenetes v1.2引入的新概念，引入的目的是为了更好的解决Pod的编排问题，Deployment内部使用了Replica Set来实现。Deployment的定义与Replica Set的定义很类似，除了API声明与Kind类型有所区别：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      tier: frontend\n    matchExpressions:\n      - {key: tier, operator: In, values: [frontend]}\n  template:\n    metadata:\n      labels:\n        app: app-demo\n        tier: frontend\n    spec:\n      containers:\n      - name: tomcat-demo\n        image: tomcat\n        ports:\n        - containerPort: 8080\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("h3",{attrs:{id:"horizontal-pod-autoscaler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#horizontal-pod-autoscaler"}},[s._v("#")]),s._v(" Horizontal Pod Autoscaler")]),s._v(" "),e("p",[s._v("Horizontal Pod Autoscal(Pod横向扩容 简称HPA)与RC、Deployment一样，也属于一种Kubernetes资源对象。通过追踪分析RC控制的所有目标Pod的负载变化情况，来确定是否需要针对性地调整目标Pod的副本数，这是HPA的实现原理。")]),s._v(" "),e("p",[s._v("Kubernetes对Pod扩容与缩容提供了手动和自动两种模式，手动模式通过kubectl scale命令对一个Deployment/RC进行Pod副本数量的设置。自动模式则需要用户根据某个性能指标或者自定义业务指标，并指定Pod副本数量的范围，系统将自动在这个范围内根据性能指标的变化进行调整。")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("手动扩容和缩容")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("kubectl scale deployment frontend --replicas 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("自动扩容和缩容")]),s._v(" "),e("p",[s._v("HPA控制器基本Master的kube-controller-manager服务启动参数 --horizontal-pod-autoscaler-sync-period 定义的时长(默认值为30s),周期性地监测Pod的CPU使用率，并在满足条件时对RC或Deployment中的Pod副本数量进行调整，以符合用户定义的平均Pod CPU使用率。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: apps/v1beta1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 1\n  template:\n    metadata:\n      name: nginx\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx\n        resources:\n          requests:\n            cpu: 50m\n        ports:\n        - containerPort: 80\n-------------------------------\napiVersion: v1\nkind: Service\nmetadata:\n name: nginx-svc\nspec:\n type: NodePort\n ports:\n  - port: 80\n selector:\n   app: nginx\n-------------------------------\napiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: nginx-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: app/v1beta1\n    kind: Deployment\n    name: nginx-deployment\n  minReplicas: 1\n  maxReplicas: 10\n  targetCPUUtilizationPercentage: 50\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br")])])])]),s._v(" "),e("h3",{attrs:{id:"volume详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#volume详解"}},[s._v("#")]),s._v(" Volume详解")]),s._v(" "),e("p",[s._v("Volume是Pod中能够被多个容器访问的共享目录。Kubernetes的Volume定义在Pod上，它被一个Pod中的多个容 器挂载到具体的文件目录下。Volume与Pod的生命周期相同，但与容器的生命周期不相关，当容器终止或重启 时，Volume中的数据也不会丢失。要使用volume，pod需要指定volume的类型和内容（ spec.volumes 字段）， 和映射到容器的位置（ spec.containers.volumeMounts 字段）。 Kubernetes支持多种类型的Volume,包括： emptyDir、hostPath、gcePersistentDisk、awsElasticBlockStore、nfs、iscsi、flocker、glusterfs、rbd、 cephfs、gitRepo、secret、persistentVolumeClaim、downwardAPI、azureFileVolume、azureDisk、 vsphereVolume、Quobyte、PortworxVolume、ScaleIO。")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("emptyDir")]),s._v(" "),e("p",[s._v("EmptyDir类型的volume创建于pod被调度到某个宿主机上的时候，而同一个pod内的容器都能读写EmptyDir中的同一个文件。一旦这个pod离开了这个宿主机，EmptyDir中的数据就会被永久删除。所以目前EmptyDir 类型的volume主要用作临时空间，比如Web服务器写日志或者tmp文件需要的临时目录。")]),s._v(" "),e("p",[s._v("yaml示例如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: test-pd\nspec:\n  containers:\n  - image: docker.io/nazarpc/webserver\n    name: test-container\n    volumeMounts:\n    - mountPath: /cache\n      name: cache-volume\n  volumes:\n    - name: cache-volume\n    emptyDir: {}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("hostPath")]),s._v(" "),e("p",[s._v("HostPath属性的volume使得对应的容器能够访问当前宿主机上的指定目录。例如，需要运行一个访问 Docker系统目录的容器，那么就使用/var/lib/docker目录作为一个HostDir类型的volume；或者要在一个容器内部运行CAdvisor，那么就使用/dev/cgroups目录作为一个HostDir类型的volume。一旦这个pod离开了 这个宿主机，HostDir中的数据虽然不会被永久删除，但数据也不会随pod迁移到其他宿主机上。因此，需要注意的是，由于各个宿主机上的文件系统结构和内容并不一定完全相同，所以相同pod的HostDir可能会在不同的宿主机上表现出不同的行为。")]),s._v(" "),e("p",[s._v("yaml示例如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: test-pd\nspec:\n  containers:\n  - image: docker.io/nazarpc/webserver\n    name: test-container\n    # 指定在容器中挂接路径\n    volumeMounts:\n    - mountPath: /test-pd\n      name: test-volume\n  # 指定所提供的存储卷\n  volumes:\n  - name: test-volume\n    # 宿主机上的目录\n    hostPath:\n      # directory location on host\n      path: /data\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("nfs")]),s._v(" "),e("p",[s._v("NFS类型的volume。允许一块现有的网络硬盘在同一个pod内的容器间共享。")]),s._v(" "),e("p",[s._v("yaml示例如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2\nkind: Deployment\nmetadata:\n  name: redis\nspec:\n  selector:\n    matchLabels:\n      app: redis\n  revisionHistoryLimit: 2\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      # 应用的镜像\n      - image: redis\n        name: redis\n        imagePullPolicy: IfNotPresent\n        # 应用的内部端口\n        ports:\n        - containerPort: 6379\n          name: redis6379\n        env:\n        - name: ALLOW_EMPTY_PASSWORD\n          value: "yes"\n        - name: REDIS_PASSWORD\n          value: "redis"\n          # 持久化挂接位置，在docker中\n        volumeMounts:\n        - name: redis-persistent-storage\n          mountPath: /data\n      volumes:\n      # 宿主机上的目录\n      - name: redis-persistent-storage\n        nfs:\n          path: /k8s-nfs/redis/data\n          server: 192.168.126.112\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br")])])])]),s._v(" "),e("h3",{attrs:{id:"namespace详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#namespace详解"}},[s._v("#")]),s._v(" Namespace详解")]),s._v(" "),e("p",[s._v('Namespace在很多情况下用于实现多用户的资源隔离，通过将集群内部的资源对象分配到不同的Namespace中， 形成逻辑上的分组，便于不同的分组在共享使用整个集群的资源同时还能被分别管理。Kubernetes集群在启动后，会创建一个名为"default"的Namespace，如果不特别指明Namespace,则用户创建的Pod，RC，Service都将被系统创建到这个默认的名为default的Namespace中。')]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Namespace创建")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('apiVersion: v1\nkind: Namespace\nmetadata:\n  name: development\n---------------------\napiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox\n  namespace: development\nspec:\n  containers:\n  - image: busybox\n    command:\n      - sleep\n      - "3600"\n    name: busybox\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("Namespace查看")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("kubectl get pods --namespace=development\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])]),s._v(" "),e("h3",{attrs:{id:"service-详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service-详解"}},[s._v("#")]),s._v(" Service 详解")]),s._v(" "),e("p",[s._v("Service是Kubernetes最核心概念，通过创建Service,可以为一组具有相同功能的容器应用提供一个统一的入口地址，并且将请求负载分发到后端的各个容器应用上。")]),s._v(" "),e("h4",{attrs:{id:"service的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service的定义"}},[s._v("#")]),s._v(" Service的定义")]),s._v(" "),e("p",[s._v("yaml格式的Service定义文件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: Service\nmatadata:\n  name: string\n  namespace: string\n  labels:\n  - name: string\n  annotations:\n  - name: string\nspec:\n  selector: []\n  type: string\n  clusterIP: string\n  sessionAffinity: string\n  ports:\n  - name: string\n    protocol: string\n    port: int\n    targetPort: int\n    nodePort: int\n  status:\n    loadBalancer:\n      ingress:\n        ip: string\n        hostname: string\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("table",[e("thead",[e("tr",[e("th",[s._v("属性名称")]),s._v(" "),e("th",[s._v("取值类型")]),s._v(" "),e("th",[s._v("是否必选")]),s._v(" "),e("th",[s._v("取值说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("version")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td",[s._v("Required")]),s._v(" "),e("td",[s._v("v1")])]),s._v(" "),e("tr",[e("td",[s._v("kind")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td",[s._v("Required")]),s._v(" "),e("td",[s._v("Service")])]),s._v(" "),e("tr",[e("td",[s._v("metadata")]),s._v(" "),e("td",[s._v("object")]),s._v(" "),e("td",[s._v("Required")]),s._v(" "),e("td",[s._v("元数据")])]),s._v(" "),e("tr",[e("td",[s._v("metadata.name")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td",[s._v("Required")]),s._v(" "),e("td",[s._v("Service名称")])]),s._v(" "),e("tr",[e("td",[s._v("metadata.namespace")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td",[s._v("Required")]),s._v(" "),e("td",[s._v("命名空间，默认为default")])]),s._v(" "),e("tr",[e("td",[s._v("metadata.labels[]")]),s._v(" "),e("td",[s._v("list")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("自定义标签属性列表")])]),s._v(" "),e("tr",[e("td",[s._v("metadata.annotation[]")]),s._v(" "),e("td",[s._v("list")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("自定义注解属性列表")])]),s._v(" "),e("tr",[e("td",[s._v("spec")]),s._v(" "),e("td",[s._v("object")]),s._v(" "),e("td",[s._v("Required")]),s._v(" "),e("td",[s._v("详细描述")])]),s._v(" "),e("tr",[e("td",[s._v("spec.selector[]")]),s._v(" "),e("td",[s._v("list")]),s._v(" "),e("td",[s._v("Required")]),s._v(" "),e("td",[s._v("Label Selector配置，将选择具有指定 Label标签的Pod作为管理范围")])]),s._v(" "),e("tr",[e("td",[s._v("spec.type")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td",[s._v("Required")]),s._v(" "),e("td",[s._v("Service的类型，指定Service的访问方 式，默认值为ClusterIP。取值范围如 下：ClusterIP: 虚拟服务的IP，用于k8s 集群内部的pod访问，在Node上kubeproxy通过设置的Iptables规则进行转 发。NodePort：使用宿主机的端口，使用能够访问各Node的外部客户端通过 Node的IP地址和端口就能访问服务。 LoadBalancer: 使用外接负载均衡器完成到服务的负载分发，需要在 spec.status.loadBalancer字段指定外部 负载均衡器的IP地址，并同时定义 nodePort和clusterIP，用于公有云环境。")])]),s._v(" "),e("tr",[e("td",[s._v("spec.clusterIP")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("虚拟服务的IP地址，当type=clusterIP 时，如果不指定，则系统进行自动分配。也可以手工指定。当 type=LoadBalancer时，则需要指定。")])]),s._v(" "),e("tr",[e("td",[s._v("spec.sessionAffinity")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("是否支持Session，可选值为ClientIP， 表示将同一个源IP地址的客户端访问请求 都转发到同一个后端Pod。默认值为空。")])]),s._v(" "),e("tr",[e("td",[s._v("spec.ports[]")]),s._v(" "),e("td",[s._v("list")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("Service需要暴露的端口列表")])]),s._v(" "),e("tr",[e("td",[s._v("spec.ports[].name")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("端口名称")])]),s._v(" "),e("tr",[e("td",[s._v("spec.ports[].protocol")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("端口协议，支持TCP和UDP，默认值为 TCP")])]),s._v(" "),e("tr",[e("td",[s._v("spec.ports[].port")]),s._v(" "),e("td",[s._v("int")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("服务监听的端口号")])]),s._v(" "),e("tr",[e("td",[s._v("spec.ports[].targetPort")]),s._v(" "),e("td",[s._v("int")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("需要转发到后端Pod的端口号")])]),s._v(" "),e("tr",[e("td",[s._v("spec.ports[].nodePort")]),s._v(" "),e("td",[s._v("int")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("当spec.type=NodePort时，指定映射到物理机的端口号")])]),s._v(" "),e("tr",[e("td",[s._v("status")]),s._v(" "),e("td",[s._v("object")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("当spec.type=LoadBalancer时，设置外 部负载均衡器的地址，用于公有云环境")])]),s._v(" "),e("tr",[e("td",[s._v("status.loadBalancer")]),s._v(" "),e("td",[s._v("object")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("外部负载均衡器")])]),s._v(" "),e("tr",[e("td",[s._v("status.loadBalancer.ingress")]),s._v(" "),e("td",[s._v("object")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("外部负载均衡器")])]),s._v(" "),e("tr",[e("td",[s._v("status.loadBalancer.ingress.ip")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("外部负载均衡器的IP地址")])]),s._v(" "),e("tr",[e("td",[s._v("status.loadBalancer.ingress.hostname")]),s._v(" "),e("td",[s._v("string")]),s._v(" "),e("td"),s._v(" "),e("td",[s._v("外部负载均衡器的主机名")])])])]),s._v(" "),e("h4",{attrs:{id:"service的基本用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service的基本用法"}},[s._v("#")]),s._v(" Service的基本用法")]),s._v(" "),e("p",[s._v("在某些特殊环境中，应用系统需要将一个外部数据库作为后端服务进行连接，或将另一个集群或Namespace中的服务作为服务的后端，这时可以通过创建一个无Label Selector的Service来实现。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n-------------------\napiVersion: v1\nkind: Endpoints\nmetadata:\n  name: my-service\nsubsets:\n- addresses:\n  - IP: 10.254.74.3\n  ports:\n  - port: 8080\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[s._v("我们可以通过kubectl get pods -l app=mywebapp -o yaml | grep podIP来获取Pod的IP地址和端口号来访问 Tomcat服务，但是直接通过Pod的IP地址和端口访问应用服务是不可靠的，因为当Pod所在的Node发生故障时， Pod将被kubernetes重新调度到另一台Node，Pod的地址会发生改变。我们可以通过配置文件来定义Service，再通过kubectl create来创建，这样可以通过Service地址来访问后端的Pod。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: mywebAppService\nspec:\n  ports:\n  - port: 8081\n    targetPort: 8080\n  selector:\n    app: mywebapp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h5",{attrs:{id:"多端口service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多端口service"}},[s._v("#")]),s._v(" 多端口Service")]),s._v(" "),e("p",[s._v("有时一个容器应用也可能需要提供多个端口的服务，那么在Service的定义中也可以相应地设置为将多个端口对应到多个应用服务。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: mywebAppService\nspec:\n  ports:\n  - port: 8080\n    targetPort: 8080\n    name: web\n  - port: 8005\n    targetPort: 8005\n    name: management\n  selector:\n    app: mywebapp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h5",{attrs:{id:"外部服务service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#外部服务service"}},[s._v("#")]),s._v(" 外部服务Service")]),s._v(" "),e("p",[s._v("在某些特殊环境中，应用系统需要将一个外部数据库作为后端服务进行连接，或将另一个集群或Namespace中的 服务作为服务的后端，这时可以通过创建一个无Label Selector的Service来实现。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n--------------------------\napiVersion: v1\nkind: Endpoints\nmetadata:\n  name: my-service\nsubsets:\n  - addresses:\n    - IP: 10.254.74.3\n    ports:\n    - port: 8080\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("h3",{attrs:{id:"k8s架构和组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#k8s架构和组件"}},[s._v("#")]),s._v(" K8S架构和组件")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/micolor/images/note/202401121424157.png",alt:"360截图17290509342963"}})]),s._v(" "),e("h4",{attrs:{id:"master-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#master-2"}},[s._v("#")]),s._v(" Master")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Kubernetes API Server")]),s._v(" "),e("p",[s._v("作为Kubernetes系统的入口，其封装了核心对象的增删改查操作，以RESTful API接口方式提供给外部客户和内部组件调用。维护的REST对象持久化到Etcd中存储。")])]),s._v(" "),e("li",[e("p",[s._v("Kubernetes Scheduler\n为新建立的Pod进行节点(node)选择(即分配机器)，负责集群的资源调度。组件抽离，可以方便替换成其他调度器。")])]),s._v(" "),e("li",[e("p",[s._v("Kubernetes Controller")]),s._v(" "),e("p",[s._v("负责执行各种控制器，目前已经提供了很多控制器来保证Kubernetes的正常运行。")])]),s._v(" "),e("li",[e("p",[s._v("Replication Controller")]),s._v(" "),e("p",[s._v("管理维护Replication Controller，关联Replication Controller和Pod，保证Replication Controller定义的副本数量与实际运行Pod数量一致。")])])]),s._v(" "),e("h4",{attrs:{id:"node-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-2"}},[s._v("#")]),s._v(" Node")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Kubelet")]),s._v(" "),e("p",[s._v("负责管控容器，Kubelet会从Kubernetes API Server接收Pod的创建请求，启动和停止容器，监控容器运行状态并汇报给Kubernetes API Server。")])]),s._v(" "),e("li",[e("p",[s._v("Kubernetes Proxy")]),s._v(" "),e("p",[s._v("负责为Pod创建代理服务，Kubernetes Proxy会从Kubernetes API Server获取所有的Service信息，并根据Service的信息创建代理服务，实现Service到Pod的请求路由和转发，从而实现Kubernetes层级的虚拟转发网络。")])]),s._v(" "),e("li",[e("p",[s._v("Docker")]),s._v(" "),e("p",[s._v("Node上需要运行容器服务")])])]),s._v(" "),e("h3",{attrs:{id:"k8s集群搭建常见问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#k8s集群搭建常见问题"}},[s._v("#")]),s._v(" K8S集群搭建常见问题")]),s._v(" "),e("h3",{attrs:{id:"docker启动失败"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker启动失败"}},[s._v("#")]),s._v(" docker启动失败")]),s._v(" "),e("p",[s._v("如果docker启动失败，请参考(vi /etc/sysconfig/selinux 把selinux后面的改为disabled，重启 一波 机器，再重启docker就可以了)")]),s._v(" "),e("h3",{attrs:{id:"解决-kubectl-get-pods时no-resources-found问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决-kubectl-get-pods时no-resources-found问题"}},[s._v("#")]),s._v(" 解决 kubectl get pods时No resources found问题")]),s._v(" "),e("p",[s._v("1、vim /etc/kubernetes/apiserver")]),s._v(" "),e("p",[s._v('2、找到”KUBE_ADMISSION_CONTROL="- admission_control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota"，去掉ServiceAccount，保存退出。')]),s._v(" "),e("p",[s._v("3、systemctl restart kube-apiserver  重启此服务")]),s._v(" "),e("h3",{attrs:{id:"pull-失败"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pull-失败"}},[s._v("#")]),s._v(" pull 失败")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("解决方案1")]),s._v(" "),e("p",[s._v("1、yum install "),e("em",[s._v("rhsm")]),s._v(" -y")]),s._v(" "),e("p",[s._v("2、docker pull registry.access.redhat.com/rhel7/pod-infrastructure:latest")]),s._v(" "),e("p",[s._v("如果以上两步解决问题了，那么就不需要在执行下面操作")]),s._v(" "),e("p",[s._v("3、docker search pod-infrastructure")]),s._v(" "),e("p",[s._v("4、docker pull docker.io/tianyebj/pod-infrastructure")]),s._v(" "),e("p",[s._v("5、docker tag tianyebj/pod-infrastructure 192.168.126.143:5000/pod-infrastructure")]),s._v(" "),e("p",[s._v("6、docker push 192.168.126.143:5000/pod-infrastructure")]),s._v(" "),e("p",[s._v("7、vi /etc/kubernetes/kubelet")]),s._v(" "),e("p",[s._v('修改 KUBELET_POD_INFRA_CONTAINER="--pod-infra-container-image=192.168.126.143：5000/pod-infrastructure:latest"')]),s._v(" "),e("p",[s._v("8、重启服务")]),s._v(" "),e("p",[s._v("systemctl restart kube-apiserver\nsystemctl restart kube-controller-manager\nsystemctl restart kube-scheduler\nsystemctl restart kubelet\nsystemctl restart kube-proxy")])]),s._v(" "),e("li",[e("p",[s._v("解决方案2")]),s._v(" "),e("p",[s._v("1、docker pull kubernetes/pause")]),s._v(" "),e("p",[s._v("2、docker tag docker.io/kubernetes/pause:latest 192.168.126.143:5000/google_containers/pause-amd64.3.0")]),s._v(" "),e("p",[s._v("3、docker push 192.168.126.143:5000/google_containers/pause-amd64.3.0")]),s._v(" "),e("p",[s._v("4、vi /etc/kubernetes/kubelet配置为")]),s._v(" "),e("p",[s._v('​\tKUBELET_ARGS="--pod_infra_container_image=192.168.126.143:5000/google_containers/pause-amd64.3.0"')]),s._v(" "),e("p",[s._v("5、重启kubelet服务   systemctl restart kubelet")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('私有仓库搭建\ndocker pull registry\ndocker run -di --name=registry -p 5000:5000 registry\n修改daemon.json {"insecure-registries":["192.168.126.148:5000"]}\n重启docker服务 systemctl restart docker\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])])]),s._v(" "),e("h3",{attrs:{id:"解决内外可以访问外网无法访问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决内外可以访问外网无法访问"}},[s._v("#")]),s._v(" 解决内外可以访问外网无法访问")]),s._v(" "),e("p",[e("code",[s._v("curl 服务地址")])]),s._v(" "),e("p",[s._v("由于k8s的的iptables导致的，设置转发")]),s._v(" "),e("p",[e("code",[s._v("iptables -P FORWARD ACCEPT")])]),s._v(" "),e("h3",{attrs:{id:"根据报错日志排查并解决集群中启动遇到的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#根据报错日志排查并解决集群中启动遇到的问题"}},[s._v("#")]),s._v(" 根据报错日志排查并解决集群中启动遇到的问题")]),s._v(" "),e("p",[s._v("如启动kubelet：systemctl start kubelet")]),s._v(" "),e("p",[s._v("查看kubelet状态：systemctl status kubelet")]),s._v(" "),e("p",[s._v("查看具体报错明细：")]),s._v(" "),e("p",[e("code",[s._v("journalctl -xefu kubelet")]),s._v(" 查看systemd日志发现真正的错误原因或者查看日志文件 cat /var/messages | grep kubelet*，找到错误信息,根据具体报错信息解决。")]),s._v(" "),e("h3",{attrs:{id:"the-connection-to-the-server-localhost-8080-was-refused-did-you-specify-the-right-host-or-port"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-connection-to-the-server-localhost-8080-was-refused-did-you-specify-the-right-host-or-port"}},[s._v("#")]),s._v(" The connection to the server localhost:8080 was refused - did you specify the right host or port?")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("echo export KUBECONFIG=/etc/kubernetes/admin.conf >> ~/.bash_profile\nsource ~/.bash_profile\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"pod状态一直pending"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pod状态一直pending"}},[s._v("#")]),s._v(" pod状态一直pending")]),s._v(" "),e("ul",[e("li",[s._v("0/1 nodes are available: 1 node(s) had taints that the pod didn't tolerate.")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("允许master节点部署pod\nkubectl taint nodes --all node-role.kubernetes.io/master-\n如果不允许调度\nkubectl taint nodes master1 node-role.kubernetes.io/master=:NoSchedule\n污点可选参数\n\t  NoSchedule: 一定不能被调度\n      PreferNoSchedule: 尽量不要调度\n      NoExecute: 不仅不会调度, 还会驱逐Node上已有的Pod\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h3",{attrs:{id:"unexpected-error-getting-claim-reference-selflink-was-empty-can-t-make-reference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unexpected-error-getting-claim-reference-selflink-was-empty-can-t-make-reference"}},[s._v("#")]),s._v(" unexpected error getting claim reference: selfLink was empty, can't make reference")]),s._v(" "),e("p",[s._v("Current workaround is to edit /etc/kubernetes/manifests/kube-apiserver.yaml")]),s._v(" "),e("p",[s._v("Under here:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("spec:\n  containers:\n  - command:\n    - kube-apiserver\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("Add this line:\n- --feature-gates=RemoveSelfLink=false")]),s._v(" "),e("p",[s._v("The do this:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("kubectl apply -f /etc/kubernetes/manifests/kube-apiserver.yaml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[s._v("#")]),s._v(" 常用命令")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("获取当前命名空间下的容器")]),s._v(" "),e("p",[s._v("kubectl get pods")])]),s._v(" "),e("li",[e("p",[s._v("获取所有容器l列表")]),s._v(" "),e("p",[s._v("kubectl get  all")])]),s._v(" "),e("li",[e("p",[s._v("创建 容器")]),s._v(" "),e("p",[s._v("kubectl create -f kubernate-pvc.yaml")])]),s._v(" "),e("li",[e("p",[s._v("删除容器")]),s._v(" "),e("p",[s._v("kubectl delete pods/test-pd  或者 kubectl delete -f rc-nginx.yaml")])]),s._v(" "),e("li",[e("p",[s._v("查看指定pod跑在哪个node上")]),s._v(" "),e("p",[s._v("kubectl get pod /test-pd -o wide")])]),s._v(" "),e("li",[e("p",[s._v("查看容器日志")]),s._v(" "),e("p",[s._v("Kubectl logs nginx-8586cf59-mwwtc")])]),s._v(" "),e("li",[e("p",[s._v("进入容器终端命令")]),s._v(" "),e("p",[s._v("kubectl exec -it nginx-8586cf59-mwwtc /bin/bash")])]),s._v(" "),e("li",[e("p",[s._v("一个Pod里含有多个容器 用--container or -c 参数。")]),s._v(" "),e("p",[s._v("例如:假如这里有个Pod名为my-pod,这个Pod有两个容器,分别名为main-app 和 helper-app,下面的命令将打开到main-app的shell的容器里。")]),s._v(" "),e("p",[s._v("kubectl exec -it my-pod --container main-app -- /bin/bash")])]),s._v(" "),e("li",[e("p",[s._v("容器详情列表")]),s._v(" "),e("p",[s._v("kubectl "),e("em",[s._v("describe")]),s._v(" pod/mysql- m8rbl")])]),s._v(" "),e("li",[e("p",[s._v("查看容器状态")]),s._v(" "),e("p",[s._v("kubectl get svc")])])]),s._v(" "),e("h2",{attrs:{id:"防火墙相关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防火墙相关"}},[s._v("#")]),s._v(" 防火墙相关")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#查看防火墙某个端口是否开放\nfirewall-cmd --query-port=3306/tcp\n#开放防火墙端口3306\nfirewall-cmd --zone=public --add-port=3306/tcp --permanent\n#查看防火墙状态\nsystemctl status firewalld\n#关闭防火墙\nsystemctl stop firewalld\n#打开防火墙\nsystemctl start firewalld\n#开放一段端口\nfirewall-cmd --zone=public --add-port=40000-45000/tcp --permanent\n#查看开放的端口列表\nfirewall-cmd --zone=public --list-ports\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h2",{attrs:{id:"安装手册"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装手册"}},[s._v("#")]),s._v(" 安装手册")]),s._v(" "),e("h2",{attrs:{id:"centos8上部署kubernetes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#centos8上部署kubernetes"}},[s._v("#")]),s._v(" Centos8上部署kubernetes")]),s._v(" "),e("h3",{attrs:{id:"查看系统版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看系统版本"}},[s._v("#")]),s._v(" 查看系统版本")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@localhost]# cat /etc/centos-release\nCentOS Linux release 8.1.1911 (Core)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"配置网络"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置网络"}},[s._v("#")]),s._v(" 配置网络")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@localhost ~]# cat /etc/sysconfig/network-scripts/ifcfg-enp0s3\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=static\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=yes\nIPV6_AUTOCONF=yes\nIPV6_DEFROUTE=yes\nIPV6_FAILURE_FATAL=no\nIPV6_ADDR_GEN_MODE=stable-privacy\nNAME=enp0s3\nUUID=039303a5-c70d-4973-8c91-97eaa071c23d\nDEVICE=enp0s3\nONBOOT=yes\nIPADDR=192.168.122.21\nNETMASK=255.255.255.0\nGATEWAY=192.168.122.1\nDNS1=223.5.5.5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h3",{attrs:{id:"添加阿里源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加阿里源"}},[s._v("#")]),s._v(" 添加阿里源")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@localhost ~]# rm -rfv /etc/yum.repos.d/*\n[root@localhost ~]# curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"配置主机名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置主机名"}},[s._v("#")]),s._v(" 配置主机名")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# cat /etc/hosts\n127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n192.168.122.21 master01.paas.com master01\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("关闭swap，注释swap分区")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# swapoff -a\n[root@master01 ~]# cat /etc/fstab\n\n#\n# /etc/fstab\n# Created by anaconda on Tue Mar 31 22:44:34 2020\n#\n# Accessible filesystems, by reference, are maintained under '/dev/disk/'.\n# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info.\n#\n# After editing this file, run 'systemctl daemon-reload' to update systemd\n# units generated from this file.\n#\n/dev/mapper/cl-root     /                       xfs     defaults        0 0\nUUID=5fecb240-379b-4331-ba04-f41338e81a6e /boot                   ext4    defaults        1 2\n/dev/mapper/cl-home     /home                   xfs     defaults        0 0\n#/dev/mapper/cl-swap     swap                    swap    defaults        0 0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[s._v("配置内核参数，将桥接的IPv4流量传递到iptables的链")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# cat > /etc/sysctl.d/k8s.conf <<EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF\nsysctl --system\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h3",{attrs:{id:"安装常用包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装常用包"}},[s._v("#")]),s._v(" 安装常用包")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# yum install vim bash-completion net-tools gcc -y\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"使用aliyun源安装docker-ce"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用aliyun源安装docker-ce"}},[s._v("#")]),s._v(" 使用aliyun源安装docker-ce")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# yum install -y yum-utils device-mapper-persistent-data lvm2\n[root@master01 ~]# yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n[root@master01 ~]# yum -y install docker-ce\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("添加aliyundocker仓库加速器")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('[root@master01 ~]# mkdir -p /etc/docker\n[root@master01 ~]# tee /etc/docker/daemon.json <<-\'EOF\'\n{\n  "registry-mirrors": ["https://fl791z1h.mirror.aliyuncs.com"]\n  "exec-opts": ["native.cgroupdriver=systemd"]\n}\nEOF\n[root@master01 ~]# systemctl daemon-reload\n[root@master01 ~]# systemctl restart docker\n[root@master01 ~]# systemctl enable docker\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h3",{attrs:{id:"安装kubectl、kubelet、kubeadm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装kubectl、kubelet、kubeadm"}},[s._v("#")]),s._v(" 安装kubectl、kubelet、kubeadm")]),s._v(" "),e("h4",{attrs:{id:"添加阿里kubernetes源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加阿里kubernetes源"}},[s._v("#")]),s._v(" 添加阿里kubernetes源")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# cat <<EOF > /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h4",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# yum install kubectl kubelet kubeadm\n[root@master01 ~]# systemctl enable kubelet\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h4",{attrs:{id:"初始化k8s集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化k8s集群"}},[s._v("#")]),s._v(" 初始化k8s集群")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# kubeadm init --kubernetes-version=1.18.0  \\\n--apiserver-advertise-address=192.168.100.7   \\\n--image-repository registry.aliyuncs.com/google_containers  \\\n--service-cidr=10.10.0.0/16 --pod-network-cidr=10.122.0.0/16\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("POD的网段为: 10.122.0.0/16， api server地址就是master本机IP。")]),s._v(" "),e("p",[s._v("这一步很关键，由于kubeadm 默认从官网k8s.grc.io下载所需镜像，国内无法访问，因此需要通过–image-repository指定阿里云镜像仓库地址。")]),s._v(" "),e("p",[s._v("记录生成的最后部分内容，此内容需要在其它节点加入Kubernetes集群时执行。\n根据提示创建kubectl")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# mkdir -p $HOME/.kube\n[root@master01 ~]# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n[root@master01 ~]# sudo chown $(id -u):$(id -g) $HOME/.kube/config\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h4",{attrs:{id:"使kubectl可以自动补充"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使kubectl可以自动补充"}},[s._v("#")]),s._v(" 使kubectl可以自动补充")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# source <(kubectl completion bash)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("查看节点，pod")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# kubectl get node\nNAME                STATUS     ROLES    AGE     VERSION\nmaster01.paas.com   NotReady   master   2m29s   v1.18.0\n[root@master01 ~]# kubectl get pod --all-namespaces\nNAMESPACE     NAME                                        READY   STATUS    RESTARTS   AGE\nkube-system   coredns-7ff77c879f-fsj9l                    0/1     Pending   0          2m12s\nkube-system   coredns-7ff77c879f-q5ll2                    0/1     Pending   0          2m12s\nkube-system   etcd-master01.paas.com                      1/1     Running   0          2m22s\nkube-system   kube-apiserver-master01.paas.com            1/1     Running   0          2m22s\nkube-system   kube-controller-manager-master01.paas.com   1/1     Running   0          2m22s\nkube-system   kube-proxy-th472                            1/1     Running   0          2m12s\nkube-system   kube-scheduler-master01.paas.com            1/1     Running   0          2m22s\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("node节点为NotReady，因为corednspod没有启动，缺少网络pod")]),s._v(" "),e("h3",{attrs:{id:"安装calico网络"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装calico网络"}},[s._v("#")]),s._v(" 安装calico网络")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml\nconfigmap/calico-config created\ncustomresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created\ncustomresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created\nclusterrole.rbac.authorization.k8s.io/calico-kube-controllers created\nclusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created\nclusterrole.rbac.authorization.k8s.io/calico-node created\nclusterrolebinding.rbac.authorization.k8s.io/calico-node created\ndaemonset.apps/calico-node created\nserviceaccount/calico-node created\ndeployment.apps/calico-kube-controllers created\nserviceaccount/calico-kube-controllers created\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("p",[s._v("查看pod和node")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# kubectl get pod --all-namespaces\nNAMESPACE     NAME                                        READY   STATUS    RESTARTS   AGE\nkube-system   calico-kube-controllers-555fc8cc5c-k8rbk    1/1     Running   0          36s\nkube-system   calico-node-5km27                           1/1     Running   0          36s\nkube-system   coredns-7ff77c879f-fsj9l                    1/1     Running   0          5m22s\nkube-system   coredns-7ff77c879f-q5ll2                    1/1     Running   0          5m22s\nkube-system   etcd-master01.paas.com                      1/1     Running   0          5m32s\nkube-system   kube-apiserver-master01.paas.com            1/1     Running   0          5m32s\nkube-system   kube-controller-manager-master01.paas.com   1/1     Running   0          5m32s\nkube-system   kube-proxy-th472                            1/1     Running   0          5m22s\nkube-system   kube-scheduler-master01.paas.com            1/1     Running   0          5m32s\n[root@master01 ~]# kubectl get node\nNAME                STATUS   ROLES    AGE     VERSION\nmaster01.paas.com   Ready    master   5m47s   v1.18.0\n[root@master01 ~]#\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("h3",{attrs:{id:"节点加入集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#节点加入集群"}},[s._v("#")]),s._v(" 节点加入集群")]),s._v(" "),e("h4",{attrs:{id:"创建token-token有效时间24h"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建token-token有效时间24h"}},[s._v("#")]),s._v(" 创建token，token有效时间24h")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@k8s-master~]# kubeadm token create\nc9afga.w3fue0yh3gzxczic\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h4",{attrs:{id:"查看token"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看token"}},[s._v("#")]),s._v(" 查看token")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@k8s-master~]# kubeadm token list\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"获取ca证书sha256编码hash值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取ca证书sha256编码hash值"}},[s._v("#")]),s._v(" 获取ca证书sha256编码hash值")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@k8s-master~]# openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'\n8b79b6461e58c07333cb2851fe74fd4374af8bbbe0bf7e040b415b86ad4fb89d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h4",{attrs:{id:"节点加入集群-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#节点加入集群-2"}},[s._v("#")]),s._v(" 节点加入集群")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@k8s-node~]# kubeadm reset\n[root@k8s-node~]# kubeadm join 192.168.100.7:6443 --token c9afga.w3fue0yh3gzxczic --discovery-token-ca-cert-hash sha256:8b79b6461e58c07333cb2851fe74fd4374af8bbbe0bf7e040b415b86ad4fb89d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h4",{attrs:{id:"节点查看"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#节点查看"}},[s._v("#")]),s._v(" 节点查看")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master ~]# kubectl get nodes\nNAME       STATUS   ROLES                  AGE   VERSION\nmaster     Ready    control-plane,master   14h   v1.20.2\nnode       Ready    <none>                 10m   v1.20.2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h3",{attrs:{id:"master加入集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#master加入集群"}},[s._v("#")]),s._v(" master加入集群")]),s._v(" "),e("h4",{attrs:{id:"设置免密登录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置免密登录"}},[s._v("#")]),s._v(" 设置免密登录")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master01 ~]# ssh-keygen -t rsa\n[root@master01 ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub root@192.168.100.9\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h4",{attrs:{id:"同步相关证书脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同步相关证书脚本"}},[s._v("#")]),s._v(" 同步相关证书脚本")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@master home]# cat scp.sh \nUSER=root\nCONTROL_PLANE_IPS=\"192.168.100.9\"\nfor host in ${CONTROL_PLANE_IPS}; \ndo\n    scp /etc/kubernetes/pki/ca.crt \"${USER}\"@$host:\n    scp /etc/kubernetes/pki/ca.key \"${USER}\"@$host:\n    scp /etc/kubernetes/pki/sa.key \"${USER}\"@$host:\n    scp /etc/kubernetes/pki/sa.pub \"${USER}\"@$host:\n    scp /etc/kubernetes/pki/front-proxy-ca.crt \"${USER}\"@$host:\n    scp /etc/kubernetes/pki/front-proxy-ca.key \"${USER}\"@$host:\n    scp /etc/kubernetes/pki/etcd/ca.crt \"${USER}\"@$host:etcd-ca.crt\n    scp /etc/kubernetes/pki/etcd/ca.key \"${USER}\"@$host:etcd-ca.key\n    scp /etc/kubernetes/admin.conf \"${USER}\"@$host:\n    ssh ${USER}@${host} 'mkdir -p /etc/kubernetes/pki/etcd'\n    ssh ${USER}@${host} 'mv /${USER}/ca.crt /etc/kubernetes/pki/'\n    ssh ${USER}@${host} 'mv /${USER}/ca.key /etc/kubernetes/pki/'\n    ssh ${USER}@${host} 'mv /${USER}/sa.pub /etc/kubernetes/pki/'\n    ssh ${USER}@${host} 'mv /${USER}/sa.key /etc/kubernetes/pki/'\n    ssh ${USER}@${host} 'mv /${USER}/front-proxy-ca.crt /etc/kubernetes/pki/'\n    ssh ${USER}@${host} 'mv /${USER}/front-proxy-ca.key /etc/kubernetes/pki/'\n    ssh ${USER}@${host} 'mv /${USER}/etcd-ca.crt /etc/kubernetes/pki/etcd/ca.crt'\n    ssh ${USER}@${host} 'mv /${USER}/etcd-ca.key /etc/kubernetes/pki/etcd/ca.key'\n    ssh ${USER}@${host} 'mv /${USER}/admin.conf /etc/kubernetes/admin.conf'\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("h4",{attrs:{id:"节点加入集群-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#节点加入集群-3"}},[s._v("#")]),s._v(" 节点加入集群")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@k8s-node~]# kubeadm reset\n[root@k8s-node~]# kubeadm join 192.168.100.7:6443 --token c9afga.w3fue0yh3gzxczic --discovery-token-ca-cert-hash sha256:8b79b6461e58c07333cb2851fe74fd4374af8bbbe0bf7e040b415b86ad4fb89d --control-plane\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"安装helm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装helm"}},[s._v("#")]),s._v(" 安装Helm")]),s._v(" "),e("h3",{attrs:{id:"创建权限"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建权限"}},[s._v("#")]),s._v(" 创建权限")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: tiller\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: tiller\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: tiller\n    namespace: kube-system\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("[root@k8s-node1 k8s]# kubectl apply -f helm_rbac.yaml\nserviceaccount/tiller created\nclusterrolebinding.rbac.authorization.k8s.io/tiller created\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"下载安装包并安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下载安装包并安装"}},[s._v("#")]),s._v(" 下载安装包并安装")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#下载安装包 https://github.com/helm/helm/releases\nwget https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz\n#解压压缩包\ntar -zxvf helm-v2.16.3.tar.gz\nmv helm-v2.16.3/helm /usr/local/bin/helm\nmv helm-v2.16.3/tiller /usr/local/bin/tiller\n#验证\nhelm help\n初始化\nhelm init --service-account=tiller --tiller-image=registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.16.3 --history-max 300\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h3",{attrs:{id:"验证-helm-或-tiller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证-helm-或-tiller"}},[s._v("#")]),s._v(" 验证 helm 或 tiller")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("kubectl -n kube-system get pods|grep tiller\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"检查-tiller-是否部署到-k8s"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检查-tiller-是否部署到-k8s"}},[s._v("#")]),s._v(" 检查 tiller 是否部署到 k8s")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-node1 local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pod -n kube-system -l app=helm")]),s._v("\nNAME                             READY   STATUS    RESTARTS   AGE\ntiller-deploy-7b76b656b5-m4k2x   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          94s\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"安装openebs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装openebs"}},[s._v("#")]),s._v(" 安装openEBS")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-node1 local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl create ns openebs")]),s._v("\nnamespace/openebs created\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h4",{attrs:{id:"安装-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-2"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-node1 local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# helm install --namespace openebs --name openebs stable/openebs --version 1.5.0")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"验证等待安装完成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证等待安装完成"}},[s._v("#")]),s._v(" 验证等待安装完成")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@master01 manifests"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get pods -n openebs")]),s._v("\nNAME                                           READY   STATUS    RESTARTS   AGE\nopenebs-admission-server-5dbc9f4456-vv74r      "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          12m\nopenebs-apiserver-659d656db5-fhdzn             "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          12m\nopenebs-localpv-provisioner-6cb9d78965-82fnj   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          12m\nopenebs-ndm-2t2tm                              "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          12m\nopenebs-ndm-operator-5ff78c45f6-549tp          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          12m\nopenebs-provisioner-77b84d8cc-rpvfz            "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          12m\nopenebs-snapshot-operator-6dcc7b6fbd-8nh82     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/2     Running   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("          12m\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h4",{attrs:{id:"将-openebs-hostpath设置为默认的-storageclass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将-openebs-hostpath设置为默认的-storageclass"}},[s._v("#")]),s._v(" 将 openebs-hostpath设置为默认的 StorageClass")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-node1 local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# kubectl patch storageclass openebs-hostpath -p \'{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}\'')]),s._v("\nstorageclass.storage.k8s.io/openebs-hostpath patched\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-node1 local"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kubectl get sc")]),s._v("\nNAME                         PROVISIONER                                                RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE\nopenebs-device               openebs.io/local                                           Delete          WaitForFirstConsumer   "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("                  7m20s\nopenebs-hostpath "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("default"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   openebs.io/local                                           Delete          WaitForFirstConsumer   "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("                  7m20s\nopenebs-jiva-default         openebs.io/provisioner-iscsi                               Delete          Immediate              "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("                  7m21s\nopenebs-snapshot-promoter    volumesnapshot.external-storage.k8s.io/snapshot-promoter   Delete          Immediate              "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("                  7m20s\nopenebs-hostpath 变为 default\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{287:function(s,a,t){},345:function(s,a,t){"use strict";t(287)},880:function(s,a,t){"use strict";t.r(a);t(345);var e=t(0),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),a("h3",{attrs:{id:"为什么要有编码规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要有编码规范"}},[s._v("#")]),s._v(" 为什么要有编码规范")]),s._v(" "),a("p",[s._v("编码规范对于程序员而言尤为重要，有以下几个原因：")]),s._v(" "),a("ul",[a("li",[s._v("一个软件的生命周期中，80%的花费在于维护")]),s._v(" "),a("li",[s._v("几乎没有任何一个软件，在其整个生命周期中，均由最初的开发人员来维护")]),s._v(" "),a("li",[s._v("编码规范可以改善软件的可读性，可以让程序员尽快而彻底地理解新的代码  为了执行规范，每个软件开发人员必须一致遵守编码规范。")])]),s._v(" "),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[s._v("#")]),s._v(" 参考资料")]),s._v(" "),a("p",[s._v("本文档主要参考了 Sun MicroSystems 公司，Java 语言规范中的编码标准部分。参考链接： http://java.sun.com/docs/codeconv/html/CodeConvTOC.doc.html\n")]),s._v(" "),a("h2",{attrs:{id:"文件名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件名"}},[s._v("#")]),s._v(" 文件名")]),s._v(" "),a("h3",{attrs:{id:"文件命名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件命名"}},[s._v("#")]),s._v(" 文件命名")]),s._v(" "),a("p",[s._v("文件命名与该文件包含的公共类或者接口名字相同。")]),s._v(" "),a("h3",{attrs:{id:"文件后缀"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件后缀"}},[s._v("#")]),s._v(" 文件后缀")]),s._v(" "),a("p",[s._v("Java程序使用下列文件后缀：")]),s._v(" "),a("ul",[a("li",[s._v("Java源文件：.java")]),s._v(" "),a("li",[s._v("Java编译后的字节码文件：.class")]),s._v(" "),a("li",[s._v("MANIFEST.MF：.MF，包配置的说明文件。")]),s._v(" "),a("li",[s._v("XML配置文件：.xml z 属性配置文件：.property")]),s._v(" "),a("li",[s._v("Jar文件：.jar")])]),s._v(" "),a("h2",{attrs:{id:"文件组织"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件组织"}},[s._v("#")]),s._v(" 文件组织")]),s._v(" "),a("p",[s._v("一个文件由被空行分割而成的段落以及标识每个段落的可选注释共同组成。第 11 章的源文 件范例提供了一个布局合理的Java程序范例。")]),s._v(" "),a("h3",{attrs:{id:"java源文件长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java源文件长度"}},[s._v("#")]),s._v(" Java源文件长度")]),s._v(" "),a("p",[s._v("文件长度不得超过2000行。")]),s._v(" "),a("h3",{attrs:{id:"java源文件结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java源文件结构"}},[s._v("#")]),s._v(" Java源文件结构")]),s._v(" "),a("p",[s._v("每个 Java 源文件都包含一个单一的公共类或接口。若私有类和接口与一个公共类相关联， 可以将它们和公共类放入同一个源文件。公共类必须是这个文件中的第一个类或接口。\nJava源文件还遵循以下规则：")]),s._v(" "),a("ul",[a("li",[s._v("开头注释")]),s._v(" "),a("li",[s._v("包和引入语句")]),s._v(" "),a("li",[s._v("类和接口声明")])]),s._v(" "),a("h3",{attrs:{id:"开头注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开头注释"}},[s._v("#")]),s._v(" 开头注释")]),s._v(" "),a("p",[s._v("所有的源文件都应该在开头有一个C语言风格的注释，其中列版本信息、作者和说明：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/*    \n * Classname    \n *    \n * Version information    \n *    \n * Date    \n *\n * Copyright notice    \n*/ \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"包和引入语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包和引入语句"}},[s._v("#")]),s._v(" 包和引入语句")]),s._v(" "),a("p",[s._v("在Java源文件中，第一个非注释行是包语句。在它之后可以跟引入语句。例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("package java.awt; \nimport java.awt.peer.CanvasPeer;  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("注意：引入语句要使用精确引入，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import java.awt.peer.CanvasPeer; \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("而不是")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import java.awt.peer.*; \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"类和接口声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类和接口声明"}},[s._v("#")]),s._v(" 类和接口声明")]),s._v(" "),a("p",[s._v("类和接口声明的各个部分出现的先后次序：")]),s._v(" "),a("ol",[a("li",[s._v("类/接口JavaDoc注释（"),a("code",[s._v("/*......*/")]),s._v("）")]),s._v(" "),a("li",[s._v("类或接口的声明。")]),s._v(" "),a("li",[s._v("类/接口实现的注释（"),a("code",[s._v("/*......*/")]),s._v("），如果有必要的话。该注释应包含任何有关整个类或接口 的信息，而这些信息又不适合作为类/接口文档注释。")]),s._v(" "),a("li",[s._v("类的（静态）变量。首先是公共（public）变量，随后是保护（protected）变量，再后 是包级别的变量（没有访问修饰符的，默认为friendly），最后是私有（private）变量。")]),s._v(" "),a("li",[s._v("实例变量。首先是公共（public）变量，随后是保护（protected）变量，再后是包级别 的变量（没有访问修饰符的，默认为friendly），最后是私有（private）变量。")]),s._v(" "),a("li",[s._v("构造函数")]),s._v(" "),a("li",[s._v("方法，这些方法应该按功能，而非作用域或访问权限，分组。例如，一个私有的类方法 可以置于两个公有的实例方法之间。其目的是为了更便于阅读和理解代码。")]),s._v(" "),a("li",[s._v("main()函数，如果有main函数的话，则放在类的最后。 9. exit() 除了在 main() 中可以被调用外，其他的地方不应该调用。因为这样做不给任何 代码机会来截获退出。一个类似后台服务地程序不应该因为某一个库模块决定了要退出 就退出。")])]),s._v(" "),a("h2",{attrs:{id:"缩进排版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缩进排版"}},[s._v("#")]),s._v(" 缩进排版")]),s._v(" "),a("p",[s._v("4个空格在eclipse中默认作为一个缩进单位（一个TAB 键） 。")]),s._v(" "),a("h3",{attrs:{id:"行长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行长度"}},[s._v("#")]),s._v(" 行长度")]),s._v(" "),a("p",[s._v("尽量避免一行的长度超过80个字符，因为很多终端和工具不能很好处理之。")]),s._v(" "),a("h3",{attrs:{id:"换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#换行"}},[s._v("#")]),s._v(" 换行")]),s._v(" "),a("p",[s._v("当一个表达式无法容纳在一行内时，可以依据如下一般规则换行：")]),s._v(" "),a("ul",[a("li",[s._v("在一个逗号后面换行")]),s._v(" "),a("li",[s._v("在一个操作符前面换行")]),s._v(" "),a("li",[s._v("选择较高级别的换行，而非较低级别的换行")]),s._v(" "),a("li",[s._v("新的一行应该与上一行同一级别表达式的开头处对齐")]),s._v(" "),a("li",[s._v("如果以上规则使代码都堆挤在右边，那就回退一个TAB 以下是断开方法调用的一些例子："),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("someMethod(longExpression1, longExpression2, longExpression3,\n     longExpression4, longExpression5); //逗号分割   \nvar = someMethod1(longExpression1, \n           someMethod2(longExpression2,                                    \n               longExpression3));  //同级分割 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("p",[s._v("以下是两个断开算术表达式的例子。前者更好，因为断开处位于括号表达式的外边，这是个 较高级别的断开。 longName1 = longName2 "),a("code",[s._v("*")]),s._v(" (longName3 + longName4 - longName5) + 4 "),a("code",[s._v("*")]),s._v(" longname6; //同级分割，正确   longName1 = longName2 * (longName3 + longName4                          - longName5) + 4 "),a("code",[s._v("*")]),s._v(" longname6; //越级分割，错误\n以下是两个缩进方法声明的例子。前者是常规情形。后者若使用常规的缩进方式将会使第二 行和第三行移得很靠右，所以代之以回退一个TAB：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//常规缩进   \nsomeMethod(int anArg, Object anotherArg, String yetAnotherArg,\n     Object andStillAnother) {\n          ...   \n}\n\n//回退一个TAB 消除过深的缩进  \nprivate static synchronized horkingLongMethodName(int anArg,       \n   Object anotherArg, String yetAnotherArg,       \n   Object andStillAnother) {       \n   ...\n} \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[s._v("#")]),s._v(" 注释")]),s._v(" "),a("p",[s._v("Java程序有两类注释：实现注释和文档注释(JavaDoc)。实现注释是那些在 C++中见过的， 使用"),a("code",[s._v("/*...*/")]),s._v("和//界定的注释。文档注释(被称为“doc comments”)是 Java 独有的，并由 "),a("code",[s._v("/*...*/")]),s._v("界定。文档注释可以通过JavaDoc工具转换成HTML 文件。")]),s._v(" "),a("p",[s._v("实现注释用以注释代码或者实现细节。文档注释从实现自由(implementation-free)的角度描 述代码的规范。它可以被那些手头没有源码的开发人员读懂。")]),s._v(" "),a("p",[s._v("注意：频繁的注释有时反映出代码的低质量。当你觉得被迫要加注释的时候，考虑一下重 写代码使其更清晰。")]),s._v(" "),a("h3",{attrs:{id:"实现注释的格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现注释的格式"}},[s._v("#")]),s._v(" 实现注释的格式")]),s._v(" "),a("p",[s._v("程序可以有 4 种实现注释的风格：块(block)、单行(single-line)、尾端(trailing)和行末 (end-of-line)。")]),s._v(" "),a("h3",{attrs:{id:"块注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块注释"}},[s._v("#")]),s._v(" 块注释")]),s._v(" "),a("p",[s._v("块注释通常用于提供对文件，方法，数据结构和算法的描述。块注释被置于每个文件的开始 处以及每个方法之前。它们也可以被用于其他地方，比如方法内部。在功能和方法内部的块 注释应该和它们所描述的代码具有一样的缩进格式。")]),s._v(" "),a("p",[s._v("块注释之首应该有一个空行，用于把块注释和代码分割开来，比如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/*  \n * Here is a block comment.  \n */ \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"单行注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单行注释"}},[s._v("#")]),s._v(" 单行注释")]),s._v(" "),a("p",[s._v("短注释可以显示在一行内，并与其后的代码具有一样的缩进层级。如果一个注释不能在一行 内写完，就该采用块注释。单行注释之前应该有一个空行。以下是一个 Java 代码中单行注 释的例子：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (condition) {       \n/* Handle the condition. */\n... \n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"尾端注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#尾端注释"}},[s._v("#")]),s._v(" 尾端注释")]),s._v(" "),a("p",[s._v("极短的注释可以与它们所要描述的代码位于同一行，但是应该有足够的空白来分开代码和注 释。若有多个短注释出现于大段代码中，它们应该具有相同的缩进。")]),s._v(" "),a("p",[s._v("以下是一个Java代码中尾端注释的例子：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (2 == a) {       \n    return TRUE;        /*special case*/   \n} else {       \n    return isPrime(a);    /*works for odd a*/   \n} \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"行末注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行末注释"}},[s._v("#")]),s._v(" 行末注释")]),s._v(" "),a("p",[s._v('注释界定符"//"，可以注释掉整行或者一行中的一部分。它一般不用于连续多行的注释文本； 然而，它可以用来注释掉连续多行的代码段。以下是所有三种风格的例子：')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (foo > 1) {         \n // Do a double-flip.       \n ...   \n }   \nelse {       \n return false;    // Explain why here.   \n}     \n//if (bar > 1) {   \n//\n//  // Do a triple-flip.   \n//   \n//}   \n//else {   \n//    return false;   \n//}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"文档注释的格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文档注释的格式"}},[s._v("#")]),s._v(" 文档注释的格式")]),s._v(" "),a("p",[s._v("文档注释描述Java的类、接口、构造器，方法，以及字段(field)。每个文档注释都会被置于 注释定界符"),a("code",[s._v("/**...*/")]),s._v("之中，一个注释对应一个类、接口或成员。该注释应位于声明之前：   "),a("code",[s._v("/** * The Example class provides ... */ public class Example { ... }")]),s._v(" 注意顶层(top-level)的类和接口是不缩进的，而其成员是缩进的。描述类和接口的文档注释 的第一行("),a("code",[s._v("/**")]),s._v(")不需缩进；随后的文档注释每行都缩进1格(使星号纵向对齐)。成员，包括构 造函数在内，其文档注释的第一行缩进一个TAB，随后每行都缩进一个TAB 加一个空格。")]),s._v(" "),a("p",[s._v("若你想给出有关类、接口、变量或方法的信息，而这些信息又不适合写在文档中，则可使用 实现块注释(见5.1.1)或紧跟在声明后面的单行注释(见5.1.2)。例如，有关一个类实现的细节， 应放入紧跟在类声明后面的实现块注释中，而不是放在文档注释中。")]),s._v(" "),a("p",[s._v("文档注释不能放在一个方法或构造器的定义块中，因为 Java 会将位于文档注释之后的第一 个声明与其相关联。")]),s._v(" "),a("h3",{attrs:{id:"类-接口注释的内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类-接口注释的内容"}},[s._v("#")]),s._v(" 类/接口注释的内容")]),s._v(" "),a("p",[s._v("类、接口的文档注释包含如下信息：")]),s._v(" "),a("ul",[a("li",[s._v("用途。开发人员使用某个类/接口之前，需要知道采用该类/接口的用途。")]),s._v(" "),a("li",[s._v("如何使用。开发人员需要知道该类/接口应该如何使用，如果必要的话还需要注明不应 该如何使用。")]),s._v(" "),a("li",[s._v("开发维护的日志。一个有关于该类/接口的维护记录：时间、作者、摘要。")])]),s._v(" "),a("h3",{attrs:{id:"方法注释的内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法注释的内容"}},[s._v("#")]),s._v(" 方法注释的内容")]),s._v(" "),a("ul",[a("li",[s._v("该方法是做什么的。")]),s._v(" "),a("li",[s._v("该方法如何工作。")]),s._v(" "),a("li",[s._v("代码修改历史纪录。")]),s._v(" "),a("li",[s._v("方法调用代码示范。")]),s._v(" "),a("li",[s._v("必须传入什么样的参数给这个方法。@param")]),s._v(" "),a("li",[s._v("异常处理。@throws")]),s._v(" "),a("li",[s._v("这个方法返回什么。@return")])]),s._v(" "),a("h2",{attrs:{id:"声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明"}},[s._v("#")]),s._v(" 声明")]),s._v(" "),a("h3",{attrs:{id:"每行声明变量的数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#每行声明变量的数量"}},[s._v("#")]),s._v(" 每行声明变量的数量")]),s._v(" "),a("p",[s._v("一行一个声明，因为这样以利于写注释。亦即，")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("int level;  // indentation level \nint size;   // size of table \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("不要将不同类型变量的声明放在同一行，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("int foo,  fooarray[];   //不允许 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("注意：上面的例子中，在类型和标识符之间放了一个空格。")]),s._v(" "),a("h3",{attrs:{id:"初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[s._v("#")]),s._v(" 初始化")]),s._v(" "),a("p",[s._v("尽量在声明局部变量的同时初始化。唯一不这么做的理由是变量的初始值依赖于某些先前发 生的计算。")]),s._v(" "),a("h3",{attrs:{id:"布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[s._v("#")]),s._v(" 布局")]),s._v(" "),a("p",[s._v('只在代码块的开始处声明变量。（一个块是指任何被包含在大括号"{"和"}"中间的代码。）不 要在首次用到该变量时才声明之，这会把注意力不集中的程序员搞糊涂，同时会妨碍代码在\n该作用域内的可移植性。')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('void myMethod() {\n   int int1 = 0;        // beginning of method block         \n   if (condition) {           \n   int int2 = 0;     // beginning of "if" block           \n   ...       \n   }   \n } \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("该规则的一个例外是for循环的索引变量")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for (int i = 0; i < maxLoops; i++) { ... }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("避免声明的局部变量覆盖上一级声明的变量。例如，不要在内部代码块中声明相同的变量名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("int count;   \n...   \nmyMethod() {      \n  if (condition) {          \n    int count = 0;     //不允许\n    ...       \n  }       \n...   \n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"类和接口的声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类和接口的声明"}},[s._v("#")]),s._v(" 类和接口的声明")]),s._v(" "),a("p",[s._v("当编写类和接口是，应该遵守以下格式规则：")]),s._v(" "),a("ul",[a("li",[s._v('在方法名与其参数列表之前的左括号"("间不要有空格。')]),s._v(" "),a("li",[s._v('左大括号"{"位于声明语句同行的末尾。')]),s._v(" "),a("li",[s._v('右大括号"}"另起一行，与相应的声明语句对齐，除非是一个空语句，"}"应紧跟在"{" 之后。')]),s._v(" "),a("li",[s._v("方法与方法之间以空行分隔")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Sample extends Object {\n    int ivar1; \n    int ivar2;      \n       \n    Sample(int i, int j) {           \n      ivar1 = i;           \n      ivar2 = j; \n    }         \n\n    int emptyMethod() {}       .\n    ..   \n}    \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语句"}},[s._v("#")]),s._v(" 语句")]),s._v(" "),a("h3",{attrs:{id:"简单语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单语句"}},[s._v("#")]),s._v(" 简单语句")]),s._v(" "),a("p",[s._v("每行至多包含一条语句，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("argv++;                   // 合法   \nargc--;                     // 合法   \nargv++; argc--;         // 不允许 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"复合语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复合语句"}},[s._v("#")]),s._v(" 复合语句")]),s._v(" "),a("p",[s._v('复合语句是包含在大括号中的语句序列，形如"{ 语句 }"。参考下面的规则：')]),s._v(" "),a("ul",[a("li",[s._v("被括其中的语句应该较之复合语句缩进一个层次")]),s._v(" "),a("li",[s._v('左大括号"{"应位于复合语句起始行的行尾；右大括号"}"应另起一行并与复合语句首行 对齐。')]),s._v(" "),a("li",[s._v("大括号可以被用于所有语句，包括单个语句，只要这些语句是诸如if-else或for控制结 构的一部分。这样便于添加语句而无需担心由于忘了加括号而引入bug。")])]),s._v(" "),a("h3",{attrs:{id:"返回语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回语句"}},[s._v("#")]),s._v(" 返回语句")]),s._v(" "),a("p",[s._v('一个带返回值的 return 语句不使用小括号"()"，除非它们以某种方式使返回值更为显见。例 如：')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("   return;     \n   return myDisk.size();     \n   return (size ? size : defaultSize);      //这样做是因为看起来更清楚  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"if-if-else-if-else-if-else语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-if-else-if-else-if-else语句"}},[s._v("#")]),s._v(" If, if-else, if else-if else语句")]),s._v(" "),a("p",[s._v("if-else语句应该具有如下格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (condition) {       \n   statements;  \n}  \n  \nif (condition) { \n   statements;   \n} else {      \n   statements;   \n}    \n\nif (condition) {\n  statements;\n} else if (condition) {       \n  statements;   \n} else{     \n  statements;   \n} \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("p",[s._v('注意：if语句总是用"{"和"}"括起来，避免使用如下容易引起错误的格式：')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (condition)statement; //严格禁止 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"for语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for语句"}},[s._v("#")]),s._v(" for语句")]),s._v(" "),a("p",[s._v("一个for语句应该具有如下格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for (initialization; condition; update) {statements;} \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v('注意：for语句总是用"{"和"}"括起来，即便只有一行语句')]),s._v(" "),a("h3",{attrs:{id:"while语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while语句"}},[s._v("#")]),s._v(" while语句")]),s._v(" "),a("p",[s._v("一个while语句应该具有如下格式")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("while (condition) {statements;} \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v('注意：while语句总是用"{"和"}"括起来，即便只有一行语句')]),s._v(" "),a("h3",{attrs:{id:"do-while语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#do-while语句"}},[s._v("#")]),s._v(" do-while语句")]),s._v(" "),a("p",[s._v("一个do-while语句应该具有如下格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("do {statements;} while (condition); \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"switch语句-switch-statements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch语句-switch-statements"}},[s._v("#")]),s._v(" switch语句(switch Statements)")]),s._v(" "),a("p",[s._v("一个switch语句应该具有如下格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("switch (condition) { \n  case ABC:       \n    statements;       \n    /* falls through */   \n  case DEF:       \n    statements;       \n    break;     \n  case XYZ:       \n    statements;       \n    break;     \n  default:       \n    statements;       \n    break;   \n} \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("每当一个case顺着往下执行时(因为没有break语句)，通常应在break语句的位置添加注释。 上面的示例代码中就包含注释/* falls through */。")]),s._v(" "),a("h3",{attrs:{id:"try-catch语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#try-catch语句"}},[s._v("#")]),s._v(" try-catch语句")]),s._v(" "),a("p",[s._v("一个try-catch语句应该具有如下格式：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("try {       \n  statements;   \n} catch (ExceptionClass e) {\n  statements;   \n} finally {       \n  statements;   \n} \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"空白"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空白"}},[s._v("#")]),s._v(" 空白")]),s._v(" "),a("h3",{attrs:{id:"空行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空行"}},[s._v("#")]),s._v(" 空行")]),s._v(" "),a("p",[s._v("空行将逻辑相关的代码段分隔开，以提高可读性。")]),s._v(" "),a("p",[s._v("下列情况应该总是使用两个空行：")]),s._v(" "),a("ul",[a("li",[s._v("一个源文件的两个片段(section)之间。")]),s._v(" "),a("li",[s._v("类声明和接口声明之间。")])]),s._v(" "),a("p",[s._v("下列情况应该总是使用一个空行：")]),s._v(" "),a("ul",[a("li",[s._v("两个方法之间。")]),s._v(" "),a("li",[s._v("方法内的局部变量和方法的第一条语句之间。")]),s._v(" "),a("li",[s._v('块注释（参见"5.1.1"）或单行注释（参见"5.1.2"）之前。')]),s._v(" "),a("li",[s._v("一个方法内的两个逻辑段之间，用以提高可读性。")])]),s._v(" "),a("h3",{attrs:{id:"空格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空格"}},[s._v("#")]),s._v(" 空格")]),s._v(" "),a("p",[s._v("下列情况应该使用空格：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("一个紧跟着括号的关键字应该被空格分开，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("while (true) {       ...   } \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("p",[s._v("注意：空格不应该置于方法名与其左括号之间。这将有助于区分关键字和方法调用。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("空白应该位于参数列表中逗号的后面")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("void method1(int a, int b) \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v('所有的二元运算符，除了"."，应该使用空格将之与操作数分开。一元操作符和操作数 之间不因该加空格，比如：负号("-")、自增("++")和自减("--")。例如：      a += c + d;     d++;')])]),s._v(" "),a("li",[a("p",[s._v("for语句中的表达式应该被空格分开，例如：      for (expr1; expr2; expr3)")])]),s._v(" "),a("li",[a("p",[s._v("强制转型后应该跟一个空格，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("char c; int a = 1; c = (char) a; \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"命名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[s._v("#")]),s._v(" 命名规范")]),s._v(" "),a("p",[s._v("命名规范使程序更易读，从而更易于理解。它们也可以提供一些有关标识符功能的信息，以 助于理解代码，不论它是一个常量、包、还是类。\n需要注意的是：")]),s._v(" "),a("ul",[a("li",[s._v("使用完整的英文描述来命名")]),s._v(" "),a("li",[s._v("避免命名超长（15个字符以内比较好）")]),s._v(" "),a("li",[s._v("避免相似的命名。例如：persistentObj 和 persistentObjs 不要一起使用；anSqlStmt 和 anSQLStmt不要一起使用")]),s._v(" "),a("li",[s._v("慎用缩写，如果要用到缩写，请参考下一条 z 按照缩写规则使用缩写。例如：No.代表number数字，ID.代表identification标示。")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[s._v("标识符类型")]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[s._v("命名规则")]),s._v(" "),a("th",{staticStyle:{"text-align":"left"}},[s._v("例子")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("包(Packages)")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("一个唯一包名的前缀总是全部小写的 ASCII 字母。所有项目包名以 com.chinacache 开头。后面是程序所在项 目的英文名称，不含版本号（除非有特别 需要与以前版本区分，如：两个版本可能 同时运行），再下为子系统的名称，每个子 系统内按照类别区分。")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("com.chinacache.billing com.chinacache.billing.node com.chinacache. billing.node.util")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("类(Classes)")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("命名规则：类名是个一名词，采用大小写 混合的方式，每个单词的首字母大写。尽 量使你的类名简洁而富于描述。使用完整 单词，避免缩写词(除非该缩写词被更广泛 使用，像URL，HTML)")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("class Raster; class ImageSprite;")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("接口(Interfaces)")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v('命名规则：大小写规则与类名相似，常以 "able"、"ible"结尾。')]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("interface RasterDelegate; interface Runnable; interface Accessible;")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("方法(Methods)")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("方法名是一个动词，采用大小写混合的方 式，第一个单词的首字母小写，其后单词 的首字母大写。")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("run(); runFast(); getBackground();")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("变量(Variables) 参数(Parameter)")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("变量用大小写混合的方式，第一个单词的 首字母小写，其后单词的首字母大写。变 量名不应以下划线或美元符号开头，尽管 这在语法上是允许的。 变量名应简短且富于描述。变量名的选用 应该易于记忆，即，能够指出其用途。尽 量避免单个字符的变量名，除非是一次性 的临时变量。临时变量通常被取名为i，j， k，m和n，它们一般用于整型；c，d，e， 它们一般用于字符型。")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("char c; int i; float myWidth;")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("集合(Collection) 数组(Array)")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("集合变量例如数组、向量，在命名的时候 必须从名字上面体现出该变量为复数、数 组。还可以巧妙的使用some词头。")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("customers，orderItems， postedMessages someCustomers，someItems， someMessages")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[s._v("常量(Constants)")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("常量的声明，应该全部大写，单词间用下 划线隔开。")]),s._v(" "),a("td",{staticStyle:{"text-align":"left"}},[s._v("static final int MIN_WIDTH = 4; static final int MAX_WIDTH = 999; static final int GET_THE_CPU = 1;")])])])]),s._v(" "),a("h2",{attrs:{id:"编程惯例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程惯例"}},[s._v("#")]),s._v(" 编程惯例")]),s._v(" "),a("h3",{attrs:{id:"提供对实例以及类变量的访问控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提供对实例以及类变量的访问控制"}},[s._v("#")]),s._v(" 提供对实例以及类变量的访问控制")]),s._v(" "),a("p",[s._v("若没有足够理由，不要把实例或类变量声明为公有。")]),s._v(" "),a("h3",{attrs:{id:"引用类变量和类方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用类变量和类方法"}},[s._v("#")]),s._v(" 引用类变量和类方法")]),s._v(" "),a("p",[s._v("避免用一个对象访问一个类的静态变量和方法。应该用类名替代。")]),s._v(" "),a("p",[s._v("例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("classMethod();             //合法\nAClass.classMethod();      //合法   \nanObject.classMethod();    //不允许 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[s._v("#")]),s._v(" 常量")]),s._v(" "),a("p",[s._v("位于for循环中作为计数器值的数字常量，除了-1,0和1之外，不应被直接写入代码。")]),s._v(" "),a("h3",{attrs:{id:"等值比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#等值比较"}},[s._v("#")]),s._v(" 等值比较")]),s._v(" "),a("p",[s._v("常量放置在比较的左边，为了避免和赋值操作混淆，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (0 == id) {   …… }\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"变量赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量赋值"}},[s._v("#")]),s._v(" 变量赋值")]),s._v(" "),a("p",[s._v("避免在一个语句中给多个变量赋相同的值。它很难读懂。例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("fooBar.fChar = barFoo.lchar = 'c'; //禁止 \n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("不要将赋值运算符用在容易与相等关系运算符混淆的地方。例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (c = d++) {        // 不允许       ...   } \n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("应该写成")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (0 != (c = d++)) {     ...   } \n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("不要使用内嵌赋值运算符，例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("d = (a = b + c) + r;        //禁止 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("应该写成")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("a = b + c;\nd = a + r; \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"数组定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组定义"}},[s._v("#")]),s._v(" 数组定义")]),s._v(" "),a("p",[s._v("数组应该总是用下面的方式来命名：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("byte[] buffer;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("而不是：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("byte buffer[]; \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"其它惯例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它惯例"}},[s._v("#")]),s._v(" 其它惯例")]),s._v(" "),a("h4",{attrs:{id:"圆括号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#圆括号"}},[s._v("#")]),s._v(" 圆括号")]),s._v(" "),a("p",[s._v("一般而言，在含有多种运算符的表达式中使用圆括号来避免运算符优先级问题，是个好方法。 即使运算符的优先级对你而言可能很清楚，但对其他人未必如此。你不能假设别的程序员和 你一样清楚运算符的优先级。但是也同样应该避免无意义的圆括号。      if ((I) = 42) { // 避免这种情况，括号毫无意义！   if (a == b && c == d)     // 不允许   if ((a == b) && (c == d))  // 正确 10.7.2 返回值\n设法让你的程序结构符合目的。例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (booleanExpression) {       \n  return true;   \n} else {       \n  return false;   \n} \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("应该代之以如下方法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("return booleanExpression; \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("类似地：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if (condition) {       \n  return x;   \n}   \n  return y; \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("应该写做：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("return (condition ? x : y); \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"条件运算符-前的表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件运算符-前的表达式"}},[s._v("#")]),s._v(' 条件运算符"?"前的表达式')]),s._v(" "),a("p",[s._v('如果一个包含二元运算符的表达式出现在三元运算符" ? : "的"?"之前，那么应该给表达式添 上一对圆括号。例如：')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("(x >= 0) ? x : -x; 10.7.4 特殊注释 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("用FIXME来标识某些已知的缺陷。\n用TODO来标识未完成的内容。 例如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//FIXME 这个算法性能比较低 \n//TODO 需要实现多线程的功能 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"源文件范例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源文件范例"}},[s._v("#")]),s._v(" 源文件范例")]),s._v(" "),a("h3",{attrs:{id:"java-源文件范例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-源文件范例"}},[s._v("#")]),s._v(" Java 源文件范例")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("/*  \n* @"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#)Example.java        ")]),s._v("\n* "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2007")]),s._v("-4-11  \n* Copyright "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1998")]),s._v("-2007 ChinaCache   \n* All rights reserved.  \n*  \n*/ \npackage com.chinacache.example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" com.chinacache.example.MyLog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n/**  \n* 这里写关于这个类的一些基本功能描述。  \n*\n* @version  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2007")]),s._v("-4-11  \n* @author  Jeffrey Hu  \n*/ \npublic class Example extends SomeClass "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("     \n/* 本类的一些实现细节写这里 */ \n \n/** 类变量classVar1的JavaDoc说明 */     \npublic static int classVar1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \nprivate static Object classVar2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n    /** 实例变量instanceVar1 的JavaDoc说明 */\n    public Object instanceVar1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    \n    /** 实例变量instanceVar2 的JavaDoc说明 */\n    protected int instanceVar2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    \n    /** 实例变量instanceVar3 的JavaDoc说明 */\n    private Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" instanceVar3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    \n    /**       \n    * 构造方法的JavaDoc说明。      \n    */     \n    public "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("Example")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("         \n    // 实现细节     \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n    \n    /**\n    * doSomething 方法的JavaDoc说明.      \n    */   \n    public void "),a("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    // 方法实现的细节说明      \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n    \n    /**      \n    * doSomethingElse方法的JavaDoc说明.      \n    * @param someParam 参数的描述      \n    */     \n    public void doSomethingElse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Object someParam"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("         \n    // 方法的实现细节     \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br")])])])}),[],!1,null,null,null);a.default=n.exports}}]);